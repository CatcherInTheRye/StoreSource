#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataRepository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PCS")]
	public partial class DataClassesPCSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdos_auth_attempt(dos_auth_attempt instance);
    partial void Updatedos_auth_attempt(dos_auth_attempt instance);
    partial void Deletedos_auth_attempt(dos_auth_attempt instance);
    partial void InsertuserTimeRecord(userTimeRecord instance);
    partial void UpdateuserTimeRecord(userTimeRecord instance);
    partial void DeleteuserTimeRecord(userTimeRecord instance);
    partial void Insertlogin(login instance);
    partial void Updatelogin(login instance);
    partial void Deletelogin(login instance);
    partial void Insertmenu(menu instance);
    partial void Updatemenu(menu instance);
    partial void Deletemenu(menu instance);
    partial void Insertorganization(organization instance);
    partial void Updateorganization(organization instance);
    partial void Deleteorganization(organization instance);
    partial void InsertorganizationSetting(organizationSetting instance);
    partial void UpdateorganizationSetting(organizationSetting instance);
    partial void DeleteorganizationSetting(organizationSetting instance);
    partial void InsertroleArea(roleArea instance);
    partial void UpdateroleArea(roleArea instance);
    partial void DeleteroleArea(roleArea instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Insertschool(school instance);
    partial void Updateschool(school instance);
    partial void Deleteschool(school instance);
    partial void Insertsetting(setting instance);
    partial void Updatesetting(setting instance);
    partial void Deletesetting(setting instance);
    partial void InsertstudentHistory(studentHistory instance);
    partial void UpdatestudentHistory(studentHistory instance);
    partial void DeletestudentHistory(studentHistory instance);
    partial void Insertstudent(student instance);
    partial void Updatestudent(student instance);
    partial void Deletestudent(student instance);
    partial void InsertstudentSupportReport(studentSupportReport instance);
    partial void UpdatestudentSupportReport(studentSupportReport instance);
    partial void DeletestudentSupportReport(studentSupportReport instance);
    partial void InsertstudentSupportRequestAssignment(studentSupportRequestAssignment instance);
    partial void UpdatestudentSupportRequestAssignment(studentSupportRequestAssignment instance);
    partial void DeletestudentSupportRequestAssignment(studentSupportRequestAssignment instance);
    partial void InsertstudentSupportRequestFile(studentSupportRequestFile instance);
    partial void UpdatestudentSupportRequestFile(studentSupportRequestFile instance);
    partial void DeletestudentSupportRequestFile(studentSupportRequestFile instance);
    partial void InsertstudentSupportRequestNotification(studentSupportRequestNotification instance);
    partial void UpdatestudentSupportRequestNotification(studentSupportRequestNotification instance);
    partial void DeletestudentSupportRequestNotification(studentSupportRequestNotification instance);
    partial void InsertstudentSupportRequest(studentSupportRequest instance);
    partial void UpdatestudentSupportRequest(studentSupportRequest instance);
    partial void DeletestudentSupportRequest(studentSupportRequest instance);
    partial void InsertstudentSupportRequestType(studentSupportRequestType instance);
    partial void UpdatestudentSupportRequestType(studentSupportRequestType instance);
    partial void DeletestudentSupportRequestType(studentSupportRequestType instance);
    partial void InsertstudentTeamConsultationFile(studentTeamConsultationFile instance);
    partial void UpdatestudentTeamConsultationFile(studentTeamConsultationFile instance);
    partial void DeletestudentTeamConsultationFile(studentTeamConsultationFile instance);
    partial void InsertstudentTeamConsultationMembership(studentTeamConsultationMembership instance);
    partial void UpdatestudentTeamConsultationMembership(studentTeamConsultationMembership instance);
    partial void DeletestudentTeamConsultationMembership(studentTeamConsultationMembership instance);
    partial void InsertstudentTeamConsultation(studentTeamConsultation instance);
    partial void UpdatestudentTeamConsultation(studentTeamConsultation instance);
    partial void DeletestudentTeamConsultation(studentTeamConsultation instance);
    partial void InsertsupportRequestType(supportRequestType instance);
    partial void UpdatesupportRequestType(supportRequestType instance);
    partial void DeletesupportRequestType(supportRequestType instance);
    partial void InsertuserAction(userAction instance);
    partial void UpdateuserAction(userAction instance);
    partial void DeleteuserAction(userAction instance);
    partial void InsertuserDefaultLocation(userDefaultLocation instance);
    partial void UpdateuserDefaultLocation(userDefaultLocation instance);
    partial void DeleteuserDefaultLocation(userDefaultLocation instance);
    partial void InsertuserFteValue(userFteValue instance);
    partial void UpdateuserFteValue(userFteValue instance);
    partial void DeleteuserFteValue(userFteValue instance);
    partial void InsertuserOrganization(userOrganization instance);
    partial void UpdateuserOrganization(userOrganization instance);
    partial void DeleteuserOrganization(userOrganization instance);
    partial void InsertuserRole(userRole instance);
    partial void UpdateuserRole(userRole instance);
    partial void DeleteuserRole(userRole instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void InsertuserSupportType(userSupportType instance);
    partial void UpdateuserSupportType(userSupportType instance);
    partial void DeleteuserSupportType(userSupportType instance);
    partial void InsertstudentSupportReportFile(studentSupportReportFile instance);
    partial void UpdatestudentSupportReportFile(studentSupportReportFile instance);
    partial void DeletestudentSupportReportFile(studentSupportReportFile instance);
    #endregion
		
		public DataClassesPCSDataContext() : 
				base(global::DataRepository.Properties.Settings.Default.PCSConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesPCSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesPCSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesPCSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesPCSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dos_auth_attempt> dos_auth_attempts
		{
			get
			{
				return this.GetTable<dos_auth_attempt>();
			}
		}
		
		public System.Data.Linq.Table<userTimeRecord> userTimeRecords
		{
			get
			{
				return this.GetTable<userTimeRecord>();
			}
		}
		
		public System.Data.Linq.Table<login> logins
		{
			get
			{
				return this.GetTable<login>();
			}
		}
		
		public System.Data.Linq.Table<menu> menus
		{
			get
			{
				return this.GetTable<menu>();
			}
		}
		
		public System.Data.Linq.Table<organization> organizations
		{
			get
			{
				return this.GetTable<organization>();
			}
		}
		
		public System.Data.Linq.Table<organizationSetting> organizationSettings
		{
			get
			{
				return this.GetTable<organizationSetting>();
			}
		}
		
		public System.Data.Linq.Table<roleArea> roleAreas
		{
			get
			{
				return this.GetTable<roleArea>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<school> schools
		{
			get
			{
				return this.GetTable<school>();
			}
		}
		
		public System.Data.Linq.Table<setting> settings
		{
			get
			{
				return this.GetTable<setting>();
			}
		}
		
		public System.Data.Linq.Table<studentHistory> studentHistories
		{
			get
			{
				return this.GetTable<studentHistory>();
			}
		}
		
		public System.Data.Linq.Table<student> students
		{
			get
			{
				return this.GetTable<student>();
			}
		}
		
		public System.Data.Linq.Table<studentSupportReport> studentSupportReports
		{
			get
			{
				return this.GetTable<studentSupportReport>();
			}
		}
		
		public System.Data.Linq.Table<studentSupportRequestAssignment> studentSupportRequestAssignments
		{
			get
			{
				return this.GetTable<studentSupportRequestAssignment>();
			}
		}
		
		public System.Data.Linq.Table<studentSupportRequestFile> studentSupportRequestFiles
		{
			get
			{
				return this.GetTable<studentSupportRequestFile>();
			}
		}
		
		public System.Data.Linq.Table<studentSupportRequestNotification> studentSupportRequestNotifications
		{
			get
			{
				return this.GetTable<studentSupportRequestNotification>();
			}
		}
		
		public System.Data.Linq.Table<studentSupportRequest> studentSupportRequests
		{
			get
			{
				return this.GetTable<studentSupportRequest>();
			}
		}
		
		public System.Data.Linq.Table<studentSupportRequestType> studentSupportRequestTypes
		{
			get
			{
				return this.GetTable<studentSupportRequestType>();
			}
		}
		
		public System.Data.Linq.Table<studentTeamConsultationFile> studentTeamConsultationFiles
		{
			get
			{
				return this.GetTable<studentTeamConsultationFile>();
			}
		}
		
		public System.Data.Linq.Table<studentTeamConsultationMembership> studentTeamConsultationMemberships
		{
			get
			{
				return this.GetTable<studentTeamConsultationMembership>();
			}
		}
		
		public System.Data.Linq.Table<studentTeamConsultation> studentTeamConsultations
		{
			get
			{
				return this.GetTable<studentTeamConsultation>();
			}
		}
		
		public System.Data.Linq.Table<supportRequestType> supportRequestTypes
		{
			get
			{
				return this.GetTable<supportRequestType>();
			}
		}
		
		public System.Data.Linq.Table<userAction> userActions
		{
			get
			{
				return this.GetTable<userAction>();
			}
		}
		
		public System.Data.Linq.Table<userDefaultLocation> userDefaultLocations
		{
			get
			{
				return this.GetTable<userDefaultLocation>();
			}
		}
		
		public System.Data.Linq.Table<userFteValue> userFteValues
		{
			get
			{
				return this.GetTable<userFteValue>();
			}
		}
		
		public System.Data.Linq.Table<userOrganization> userOrganizations
		{
			get
			{
				return this.GetTable<userOrganization>();
			}
		}
		
		public System.Data.Linq.Table<userRole> userRoles
		{
			get
			{
				return this.GetTable<userRole>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<userSupportType> userSupportTypes
		{
			get
			{
				return this.GetTable<userSupportType>();
			}
		}
		
		public System.Data.Linq.Table<studentSupportReportFile> studentSupportReportFiles
		{
			get
			{
				return this.GetTable<studentSupportReportFile>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.serviceValidateUser")]
		public ISingleResult<serviceValidateUserResult> serviceValidateUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(40)")] string logon_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(40)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> attempt_timeout)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), logon_id, password, attempt_timeout);
			return ((ISingleResult<serviceValidateUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.serviceCheckAuthAttempt")]
		public int serviceCheckAuthAttempt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> attempt_timeout)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_id, attempt_timeout);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.serviceCheckSession")]
		public ISingleResult<serviceCheckSessionResult> serviceCheckSession([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> login_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), login_id);
			return ((ISingleResult<serviceCheckSessionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.serviceLogin")]
		public ISingleResult<serviceLoginResult> serviceLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(40)")] string user_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string user_ip)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_name, user_ip);
			return ((ISingleResult<serviceLoginResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dos_auth_attempts")]
	public partial class dos_auth_attempt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dos_user_id;
		
		private System.DateTime _last_access;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondos_user_idChanging(int value);
    partial void Ondos_user_idChanged();
    partial void Onlast_accessChanging(System.DateTime value);
    partial void Onlast_accessChanged();
    #endregion
		
		public dos_auth_attempt()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dos_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dos_user_id
		{
			get
			{
				return this._dos_user_id;
			}
			set
			{
				if ((this._dos_user_id != value))
				{
					this.Ondos_user_idChanging(value);
					this.SendPropertyChanging();
					this._dos_user_id = value;
					this.SendPropertyChanged("dos_user_id");
					this.Ondos_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_access", DbType="DateTime NOT NULL")]
		public System.DateTime last_access
		{
			get
			{
				return this._last_access;
			}
			set
			{
				if ((this._last_access != value))
				{
					this.Onlast_accessChanging(value);
					this.SendPropertyChanging();
					this._last_access = value;
					this.SendPropertyChanged("last_access");
					this.Onlast_accessChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userTimeRecords")]
	public partial class userTimeRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _userId;
		
		private System.Nullable<int> _studentId;
		
		private System.DateTime _date;
		
		private string _code;
		
		private int _time;
		
		private string _notes;
		
		private EntityRef<student> _student;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnstudentIdChanging(System.Nullable<int> value);
    partial void OnstudentIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OntimeChanging(int value);
    partial void OntimeChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public userTimeRecord()
		{
			this._student = default(EntityRef<student>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int")]
		public System.Nullable<int> studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					if (this._student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentIdChanging(value);
					this.SendPropertyChanging();
					this._studentId = value;
					this.SendPropertyChanged("studentId");
					this.OnstudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="Int NOT NULL")]
		public int time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_userTimeRecord", Storage="_student", ThisKey="studentId", OtherKey="id", IsForeignKey=true)]
		public student student
		{
			get
			{
				return this._student.Entity;
			}
			set
			{
				student previousValue = this._student.Entity;
				if (((previousValue != value) 
							|| (this._student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._student.Entity = null;
						previousValue.userTimeRecords.Remove(this);
					}
					this._student.Entity = value;
					if ((value != null))
					{
						value.userTimeRecords.Add(this);
						this._studentId = value.id;
					}
					else
					{
						this._studentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userTimeRecord", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.userTimeRecords.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.userTimeRecords.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.login")]
	public partial class login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _userId;
		
		private string _ipAddress;
		
		private System.Nullable<System.DateTime> _loginTime;
		
		private System.Nullable<System.DateTime> _loginActiveTime;
		
		private System.Nullable<System.DateTime> _logoutTime;
		
		private bool _service;
		
		private System.Nullable<int> _origUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnipAddressChanging(string value);
    partial void OnipAddressChanged();
    partial void OnloginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnloginTimeChanged();
    partial void OnloginActiveTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnloginActiveTimeChanged();
    partial void OnlogoutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlogoutTimeChanged();
    partial void OnserviceChanging(bool value);
    partial void OnserviceChanged();
    partial void OnorigUserIdChanging(System.Nullable<int> value);
    partial void OnorigUserIdChanged();
    #endregion
		
		public login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipAddress", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ipAddress
		{
			get
			{
				return this._ipAddress;
			}
			set
			{
				if ((this._ipAddress != value))
				{
					this.OnipAddressChanging(value);
					this.SendPropertyChanging();
					this._ipAddress = value;
					this.SendPropertyChanged("ipAddress");
					this.OnipAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> loginTime
		{
			get
			{
				return this._loginTime;
			}
			set
			{
				if ((this._loginTime != value))
				{
					this.OnloginTimeChanging(value);
					this.SendPropertyChanging();
					this._loginTime = value;
					this.SendPropertyChanged("loginTime");
					this.OnloginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginActiveTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> loginActiveTime
		{
			get
			{
				return this._loginActiveTime;
			}
			set
			{
				if ((this._loginActiveTime != value))
				{
					this.OnloginActiveTimeChanging(value);
					this.SendPropertyChanging();
					this._loginActiveTime = value;
					this.SendPropertyChanged("loginActiveTime");
					this.OnloginActiveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logoutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> logoutTime
		{
			get
			{
				return this._logoutTime;
			}
			set
			{
				if ((this._logoutTime != value))
				{
					this.OnlogoutTimeChanging(value);
					this.SendPropertyChanging();
					this._logoutTime = value;
					this.SendPropertyChanged("logoutTime");
					this.OnlogoutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service", DbType="Bit NOT NULL")]
		public bool service
		{
			get
			{
				return this._service;
			}
			set
			{
				if ((this._service != value))
				{
					this.OnserviceChanging(value);
					this.SendPropertyChanging();
					this._service = value;
					this.SendPropertyChanged("service");
					this.OnserviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origUserId", DbType="Int")]
		public System.Nullable<int> origUserId
		{
			get
			{
				return this._origUserId;
			}
			set
			{
				if ((this._origUserId != value))
				{
					this.OnorigUserIdChanging(value);
					this.SendPropertyChanging();
					this._origUserId = value;
					this.SendPropertyChanged("origUserId");
					this.OnorigUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.menu")]
	public partial class menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Text;
		
		private string _href;
		
		private string _title;
		
		private int _level;
		
		private int _roleArea;
		
		private System.Nullable<int> _oreder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnhrefChanging(string value);
    partial void OnhrefChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    partial void OnroleAreaChanging(int value);
    partial void OnroleAreaChanged();
    partial void OnorederChanging(System.Nullable<int> value);
    partial void OnorederChanged();
    #endregion
		
		public menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(100)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_href", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string href
		{
			get
			{
				return this._href;
			}
			set
			{
				if ((this._href != value))
				{
					this.OnhrefChanging(value);
					this.SendPropertyChanging();
					this._href = value;
					this.SendPropertyChanged("href");
					this.OnhrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleArea", DbType="Int NOT NULL")]
		public int roleArea
		{
			get
			{
				return this._roleArea;
			}
			set
			{
				if ((this._roleArea != value))
				{
					this.OnroleAreaChanging(value);
					this.SendPropertyChanging();
					this._roleArea = value;
					this.SendPropertyChanged("roleArea");
					this.OnroleAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oreder", DbType="Int")]
		public System.Nullable<int> oreder
		{
			get
			{
				return this._oreder;
			}
			set
			{
				if ((this._oreder != value))
				{
					this.OnorederChanging(value);
					this.SendPropertyChanging();
					this._oreder = value;
					this.SendPropertyChanged("oreder");
					this.OnorederChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.organizations")]
	public partial class organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _districtName;
		
		private string _address;
		
		private string _city;
		
		private string _province;
		
		private string _postalCode;
		
		private string _contactPhone;
		
		private string _contactFax;
		
		private string _contactEmail;
		
		private string _contactName;
		
		private string _systemUserName;
		
		private string _systemPassword;
		
		private System.Nullable<bool> _active;
		
		private EntitySet<organizationSetting> _organizationSettings;
		
		private EntitySet<school> _schools;
		
		private EntitySet<userDefaultLocation> _userDefaultLocations;
		
		private EntitySet<userOrganization> _userOrganizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndistrictNameChanging(string value);
    partial void OndistrictNameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OncontactPhoneChanging(string value);
    partial void OncontactPhoneChanged();
    partial void OncontactFaxChanging(string value);
    partial void OncontactFaxChanged();
    partial void OncontactEmailChanging(string value);
    partial void OncontactEmailChanged();
    partial void OncontactNameChanging(string value);
    partial void OncontactNameChanged();
    partial void OnsystemUserNameChanging(string value);
    partial void OnsystemUserNameChanged();
    partial void OnsystemPasswordChanging(string value);
    partial void OnsystemPasswordChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public organization()
		{
			this._organizationSettings = new EntitySet<organizationSetting>(new Action<organizationSetting>(this.attach_organizationSettings), new Action<organizationSetting>(this.detach_organizationSettings));
			this._schools = new EntitySet<school>(new Action<school>(this.attach_schools), new Action<school>(this.detach_schools));
			this._userDefaultLocations = new EntitySet<userDefaultLocation>(new Action<userDefaultLocation>(this.attach_userDefaultLocations), new Action<userDefaultLocation>(this.detach_userDefaultLocations));
			this._userOrganizations = new EntitySet<userOrganization>(new Action<userOrganization>(this.attach_userOrganizations), new Action<userOrganization>(this.detach_userOrganizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_districtName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string districtName
		{
			get
			{
				return this._districtName;
			}
			set
			{
				if ((this._districtName != value))
				{
					this.OndistrictNameChanging(value);
					this.SendPropertyChanging();
					this._districtName = value;
					this.SendPropertyChanged("districtName");
					this.OndistrictNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(50)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(15)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPhone", DbType="VarChar(20)")]
		public string contactPhone
		{
			get
			{
				return this._contactPhone;
			}
			set
			{
				if ((this._contactPhone != value))
				{
					this.OncontactPhoneChanging(value);
					this.SendPropertyChanging();
					this._contactPhone = value;
					this.SendPropertyChanged("contactPhone");
					this.OncontactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactFax", DbType="VarChar(20)")]
		public string contactFax
		{
			get
			{
				return this._contactFax;
			}
			set
			{
				if ((this._contactFax != value))
				{
					this.OncontactFaxChanging(value);
					this.SendPropertyChanging();
					this._contactFax = value;
					this.SendPropertyChanged("contactFax");
					this.OncontactFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactEmail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string contactEmail
		{
			get
			{
				return this._contactEmail;
			}
			set
			{
				if ((this._contactEmail != value))
				{
					this.OncontactEmailChanging(value);
					this.SendPropertyChanging();
					this._contactEmail = value;
					this.SendPropertyChanged("contactEmail");
					this.OncontactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string contactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OncontactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("contactName");
					this.OncontactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_systemUserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string systemUserName
		{
			get
			{
				return this._systemUserName;
			}
			set
			{
				if ((this._systemUserName != value))
				{
					this.OnsystemUserNameChanging(value);
					this.SendPropertyChanging();
					this._systemUserName = value;
					this.SendPropertyChanged("systemUserName");
					this.OnsystemUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_systemPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string systemPassword
		{
			get
			{
				return this._systemPassword;
			}
			set
			{
				if ((this._systemPassword != value))
				{
					this.OnsystemPasswordChanging(value);
					this.SendPropertyChanging();
					this._systemPassword = value;
					this.SendPropertyChanged("systemPassword");
					this.OnsystemPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_organizationSetting", Storage="_organizationSettings", ThisKey="id", OtherKey="organizationId")]
		public EntitySet<organizationSetting> organizationSettings
		{
			get
			{
				return this._organizationSettings;
			}
			set
			{
				this._organizationSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_school", Storage="_schools", ThisKey="id", OtherKey="organizationId")]
		public EntitySet<school> schools
		{
			get
			{
				return this._schools;
			}
			set
			{
				this._schools.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_userDefaultLocation", Storage="_userDefaultLocations", ThisKey="id", OtherKey="organizationId")]
		public EntitySet<userDefaultLocation> userDefaultLocations
		{
			get
			{
				return this._userDefaultLocations;
			}
			set
			{
				this._userDefaultLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_userOrganization", Storage="_userOrganizations", ThisKey="id", OtherKey="organizationId")]
		public EntitySet<userOrganization> userOrganizations
		{
			get
			{
				return this._userOrganizations;
			}
			set
			{
				this._userOrganizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_organizationSettings(organizationSetting entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_organizationSettings(organizationSetting entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
		
		private void attach_schools(school entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_schools(school entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
		
		private void attach_userDefaultLocations(userDefaultLocation entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_userDefaultLocations(userDefaultLocation entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
		
		private void attach_userOrganizations(userOrganization entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_userOrganizations(userOrganization entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.organizationSettings")]
	public partial class organizationSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _organizationId;
		
		private bool _sync;
		
		private string _powerSchoolUrl;
		
		private string _clientId;
		
		private string _clientSecret;
		
		private EntityRef<organization> _organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnorganizationIdChanging(int value);
    partial void OnorganizationIdChanged();
    partial void OnsyncChanging(bool value);
    partial void OnsyncChanged();
    partial void OnpowerSchoolUrlChanging(string value);
    partial void OnpowerSchoolUrlChanged();
    partial void OnclientIdChanging(string value);
    partial void OnclientIdChanged();
    partial void OnclientSecretChanging(string value);
    partial void OnclientSecretChanged();
    #endregion
		
		public organizationSetting()
		{
			this._organization = default(EntityRef<organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organizationId", DbType="Int NOT NULL")]
		public int organizationId
		{
			get
			{
				return this._organizationId;
			}
			set
			{
				if ((this._organizationId != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorganizationIdChanging(value);
					this.SendPropertyChanging();
					this._organizationId = value;
					this.SendPropertyChanged("organizationId");
					this.OnorganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sync", DbType="Bit NOT NULL")]
		public bool sync
		{
			get
			{
				return this._sync;
			}
			set
			{
				if ((this._sync != value))
				{
					this.OnsyncChanging(value);
					this.SendPropertyChanging();
					this._sync = value;
					this.SendPropertyChanged("sync");
					this.OnsyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_powerSchoolUrl", DbType="VarChar(100)")]
		public string powerSchoolUrl
		{
			get
			{
				return this._powerSchoolUrl;
			}
			set
			{
				if ((this._powerSchoolUrl != value))
				{
					this.OnpowerSchoolUrlChanging(value);
					this.SendPropertyChanging();
					this._powerSchoolUrl = value;
					this.SendPropertyChanged("powerSchoolUrl");
					this.OnpowerSchoolUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientId", DbType="VarChar(100)")]
		public string clientId
		{
			get
			{
				return this._clientId;
			}
			set
			{
				if ((this._clientId != value))
				{
					this.OnclientIdChanging(value);
					this.SendPropertyChanging();
					this._clientId = value;
					this.SendPropertyChanged("clientId");
					this.OnclientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientSecret", DbType="VarChar(100)")]
		public string clientSecret
		{
			get
			{
				return this._clientSecret;
			}
			set
			{
				if ((this._clientSecret != value))
				{
					this.OnclientSecretChanging(value);
					this.SendPropertyChanging();
					this._clientSecret = value;
					this.SendPropertyChanged("clientSecret");
					this.OnclientSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_organizationSetting", Storage="_organization", ThisKey="organizationId", OtherKey="id", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.organizationSettings.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.organizationSettings.Add(this);
						this._organizationId = value.id;
					}
					else
					{
						this._organizationId = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roleAreas")]
	public partial class roleArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Text;
		
		private string _href;
		
		private string _image;
		
		private int _role;
		
		private EntityRef<role> _role1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnhrefChanging(string value);
    partial void OnhrefChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnroleChanging(int value);
    partial void OnroleChanged();
    #endregion
		
		public roleArea()
		{
			this._role1 = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(50)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_href", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string href
		{
			get
			{
				return this._href;
			}
			set
			{
				if ((this._href != value))
				{
					this.OnhrefChanging(value);
					this.SendPropertyChanging();
					this._href = value;
					this.SendPropertyChanged("href");
					this.OnhrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int NOT NULL")]
		public int role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					if (this._role1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_roleArea", Storage="_role1", ThisKey="role", OtherKey="id", IsForeignKey=true)]
		public role role1
		{
			get
			{
				return this._role1.Entity;
			}
			set
			{
				role previousValue = this._role1.Entity;
				if (((previousValue != value) 
							|| (this._role1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role1.Entity = null;
						previousValue.roleAreas.Remove(this);
					}
					this._role1.Entity = value;
					if ((value != null))
					{
						value.roleAreas.Add(this);
						this._role = value.id;
					}
					else
					{
						this._role = default(int);
					}
					this.SendPropertyChanged("role1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _roleName;
		
		private string _roleDescription;
		
		private EntitySet<roleArea> _roleAreas;
		
		private EntitySet<userRole> _userRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnroleNameChanging(string value);
    partial void OnroleNameChanged();
    partial void OnroleDescriptionChanging(string value);
    partial void OnroleDescriptionChanged();
    #endregion
		
		public role()
		{
			this._roleAreas = new EntitySet<roleArea>(new Action<roleArea>(this.attach_roleAreas), new Action<roleArea>(this.detach_roleAreas));
			this._userRoles = new EntitySet<userRole>(new Action<userRole>(this.attach_userRoles), new Action<userRole>(this.detach_userRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string roleName
		{
			get
			{
				return this._roleName;
			}
			set
			{
				if ((this._roleName != value))
				{
					this.OnroleNameChanging(value);
					this.SendPropertyChanging();
					this._roleName = value;
					this.SendPropertyChanged("roleName");
					this.OnroleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleDescription", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string roleDescription
		{
			get
			{
				return this._roleDescription;
			}
			set
			{
				if ((this._roleDescription != value))
				{
					this.OnroleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._roleDescription = value;
					this.SendPropertyChanged("roleDescription");
					this.OnroleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_roleArea", Storage="_roleAreas", ThisKey="id", OtherKey="role")]
		public EntitySet<roleArea> roleAreas
		{
			get
			{
				return this._roleAreas;
			}
			set
			{
				this._roleAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_userRole", Storage="_userRoles", ThisKey="id", OtherKey="roleId")]
		public EntitySet<userRole> userRoles
		{
			get
			{
				return this._userRoles;
			}
			set
			{
				this._userRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_roleAreas(roleArea entity)
		{
			this.SendPropertyChanging();
			entity.role1 = this;
		}
		
		private void detach_roleAreas(roleArea entity)
		{
			this.SendPropertyChanging();
			entity.role1 = null;
		}
		
		private void attach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.schools")]
	public partial class school : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _organizationId;
		
		private string _schoolName;
		
		private string _address;
		
		private string _city;
		
		private string _province;
		
		private string _postalCode;
		
		private string _phone;
		
		private string _fax;
		
		private string _email;
		
		private string _website;
		
		private string _sourceId;
		
		private EntitySet<studentHistory> _studentHistories;
		
		private EntitySet<student> _students;
		
		private EntitySet<userDefaultLocation> _userDefaultLocations;
		
		private EntitySet<userOrganization> _userOrganizations;
		
		private EntityRef<organization> _organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnorganizationIdChanging(int value);
    partial void OnorganizationIdChanged();
    partial void OnschoolNameChanging(string value);
    partial void OnschoolNameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OnsourceIdChanging(string value);
    partial void OnsourceIdChanged();
    #endregion
		
		public school()
		{
			this._studentHistories = new EntitySet<studentHistory>(new Action<studentHistory>(this.attach_studentHistories), new Action<studentHistory>(this.detach_studentHistories));
			this._students = new EntitySet<student>(new Action<student>(this.attach_students), new Action<student>(this.detach_students));
			this._userDefaultLocations = new EntitySet<userDefaultLocation>(new Action<userDefaultLocation>(this.attach_userDefaultLocations), new Action<userDefaultLocation>(this.detach_userDefaultLocations));
			this._userOrganizations = new EntitySet<userOrganization>(new Action<userOrganization>(this.attach_userOrganizations), new Action<userOrganization>(this.detach_userOrganizations));
			this._organization = default(EntityRef<organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organizationId", DbType="Int NOT NULL")]
		public int organizationId
		{
			get
			{
				return this._organizationId;
			}
			set
			{
				if ((this._organizationId != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorganizationIdChanging(value);
					this.SendPropertyChanging();
					this._organizationId = value;
					this.SendPropertyChanged("organizationId");
					this.OnorganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string schoolName
		{
			get
			{
				return this._schoolName;
			}
			set
			{
				if ((this._schoolName != value))
				{
					this.OnschoolNameChanging(value);
					this.SendPropertyChanging();
					this._schoolName = value;
					this.SendPropertyChanged("schoolName");
					this.OnschoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(100)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(50)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(6)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(10)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="VarChar(100)")]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sourceId", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string sourceId
		{
			get
			{
				return this._sourceId;
			}
			set
			{
				if ((this._sourceId != value))
				{
					this.OnsourceIdChanging(value);
					this.SendPropertyChanging();
					this._sourceId = value;
					this.SendPropertyChanged("sourceId");
					this.OnsourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_studentHistory", Storage="_studentHistories", ThisKey="id", OtherKey="schoolId")]
		public EntitySet<studentHistory> studentHistories
		{
			get
			{
				return this._studentHistories;
			}
			set
			{
				this._studentHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_student", Storage="_students", ThisKey="id", OtherKey="schoolId")]
		public EntitySet<student> students
		{
			get
			{
				return this._students;
			}
			set
			{
				this._students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_userDefaultLocation", Storage="_userDefaultLocations", ThisKey="id", OtherKey="schoolId")]
		public EntitySet<userDefaultLocation> userDefaultLocations
		{
			get
			{
				return this._userDefaultLocations;
			}
			set
			{
				this._userDefaultLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_userOrganization", Storage="_userOrganizations", ThisKey="id", OtherKey="schoolId")]
		public EntitySet<userOrganization> userOrganizations
		{
			get
			{
				return this._userOrganizations;
			}
			set
			{
				this._userOrganizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_school", Storage="_organization", ThisKey="organizationId", OtherKey="id", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.schools.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.schools.Add(this);
						this._organizationId = value.id;
					}
					else
					{
						this._organizationId = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_studentHistories(studentHistory entity)
		{
			this.SendPropertyChanging();
			entity.school = this;
		}
		
		private void detach_studentHistories(studentHistory entity)
		{
			this.SendPropertyChanging();
			entity.school = null;
		}
		
		private void attach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.school = this;
		}
		
		private void detach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.school = null;
		}
		
		private void attach_userDefaultLocations(userDefaultLocation entity)
		{
			this.SendPropertyChanging();
			entity.school = this;
		}
		
		private void detach_userDefaultLocations(userDefaultLocation entity)
		{
			this.SendPropertyChanging();
			entity.school = null;
		}
		
		private void attach_userOrganizations(userOrganization entity)
		{
			this.SendPropertyChanging();
			entity.school = this;
		}
		
		private void detach_userOrganizations(userOrganization entity)
		{
			this.SendPropertyChanging();
			entity.school = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.settings")]
	public partial class setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Month;
		
		private int _Year;
		
		private int _Hours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnHoursChanging(int value);
    partial void OnHoursChanged();
    #endregion
		
		public setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Int NOT NULL")]
		public int Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentHistory")]
	public partial class studentHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentId;
		
		private int _schoolId;
		
		private string _studentNumber;
		
		private string _lastName;
		
		private string _firstName;
		
		private string _middleName;
		
		private char _gender;
		
		private System.DateTime _dob;
		
		private string _grade;
		
		private string _code;
		
		private string _specialPrograms;
		
		private string _homePhone;
		
		private string _mailingAddress;
		
		private string _mailingCity;
		
		private string _mailingProvince;
		
		private string _mailingPostalCode;
		
		private string _address;
		
		private string _city;
		
		private string _province;
		
		private string _postalCode;
		
		private string _motherName;
		
		private string _motherPhone;
		
		private string _motherEmail;
		
		private string _fatherName;
		
		private string _fatherPhone;
		
		private string _fatherEmail;
		
		private string _guardianName;
		
		private string _guardianPhone;
		
		private string _guardianEmail;
		
		private string _sourceId;
		
		private System.DateTime _from;
		
		private System.DateTime _to;
		
		private string _updatedBy;
		
		private EntityRef<school> _school;
		
		private EntityRef<student> _student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentIdChanging(int value);
    partial void OnstudentIdChanged();
    partial void OnschoolIdChanging(int value);
    partial void OnschoolIdChanged();
    partial void OnstudentNumberChanging(string value);
    partial void OnstudentNumberChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnmiddleNameChanging(string value);
    partial void OnmiddleNameChanged();
    partial void OngenderChanging(char value);
    partial void OngenderChanged();
    partial void OndobChanging(System.DateTime value);
    partial void OndobChanged();
    partial void OngradeChanging(string value);
    partial void OngradeChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnspecialProgramsChanging(string value);
    partial void OnspecialProgramsChanged();
    partial void OnhomePhoneChanging(string value);
    partial void OnhomePhoneChanged();
    partial void OnmailingAddressChanging(string value);
    partial void OnmailingAddressChanged();
    partial void OnmailingCityChanging(string value);
    partial void OnmailingCityChanged();
    partial void OnmailingProvinceChanging(string value);
    partial void OnmailingProvinceChanged();
    partial void OnmailingPostalCodeChanging(string value);
    partial void OnmailingPostalCodeChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnmotherNameChanging(string value);
    partial void OnmotherNameChanged();
    partial void OnmotherPhoneChanging(string value);
    partial void OnmotherPhoneChanged();
    partial void OnmotherEmailChanging(string value);
    partial void OnmotherEmailChanged();
    partial void OnfatherNameChanging(string value);
    partial void OnfatherNameChanged();
    partial void OnfatherPhoneChanging(string value);
    partial void OnfatherPhoneChanged();
    partial void OnfatherEmailChanging(string value);
    partial void OnfatherEmailChanged();
    partial void OnguardianNameChanging(string value);
    partial void OnguardianNameChanged();
    partial void OnguardianPhoneChanging(string value);
    partial void OnguardianPhoneChanged();
    partial void OnguardianEmailChanging(string value);
    partial void OnguardianEmailChanged();
    partial void OnsourceIdChanging(string value);
    partial void OnsourceIdChanged();
    partial void OnfromChanging(System.DateTime value);
    partial void OnfromChanged();
    partial void OntoChanging(System.DateTime value);
    partial void OntoChanged();
    partial void OnupdatedByChanging(string value);
    partial void OnupdatedByChanged();
    #endregion
		
		public studentHistory()
		{
			this._school = default(EntityRef<school>);
			this._student = default(EntityRef<student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL")]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					if (this._student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentIdChanging(value);
					this.SendPropertyChanging();
					this._studentId = value;
					this.SendPropertyChanged("studentId");
					this.OnstudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolId", DbType="Int NOT NULL")]
		public int schoolId
		{
			get
			{
				return this._schoolId;
			}
			set
			{
				if ((this._schoolId != value))
				{
					if (this._school.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolIdChanging(value);
					this.SendPropertyChanging();
					this._schoolId = value;
					this.SendPropertyChanged("schoolId");
					this.OnschoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string studentNumber
		{
			get
			{
				return this._studentNumber;
			}
			set
			{
				if ((this._studentNumber != value))
				{
					this.OnstudentNumberChanging(value);
					this.SendPropertyChanging();
					this._studentNumber = value;
					this.SendPropertyChanged("studentNumber");
					this.OnstudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middleName", DbType="VarChar(100)")]
		public string middleName
		{
			get
			{
				return this._middleName;
			}
			set
			{
				if ((this._middleName != value))
				{
					this.OnmiddleNameChanging(value);
					this.SendPropertyChanging();
					this._middleName = value;
					this.SendPropertyChanged("middleName");
					this.OnmiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Char(1) NOT NULL")]
		public char gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(25)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialPrograms", DbType="VarChar(250)")]
		public string specialPrograms
		{
			get
			{
				return this._specialPrograms;
			}
			set
			{
				if ((this._specialPrograms != value))
				{
					this.OnspecialProgramsChanging(value);
					this.SendPropertyChanging();
					this._specialPrograms = value;
					this.SendPropertyChanged("specialPrograms");
					this.OnspecialProgramsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homePhone", DbType="VarChar(10)")]
		public string homePhone
		{
			get
			{
				return this._homePhone;
			}
			set
			{
				if ((this._homePhone != value))
				{
					this.OnhomePhoneChanging(value);
					this.SendPropertyChanging();
					this._homePhone = value;
					this.SendPropertyChanged("homePhone");
					this.OnhomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailingAddress", DbType="VarChar(100)")]
		public string mailingAddress
		{
			get
			{
				return this._mailingAddress;
			}
			set
			{
				if ((this._mailingAddress != value))
				{
					this.OnmailingAddressChanging(value);
					this.SendPropertyChanging();
					this._mailingAddress = value;
					this.SendPropertyChanged("mailingAddress");
					this.OnmailingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailingCity", DbType="VarChar(50)")]
		public string mailingCity
		{
			get
			{
				return this._mailingCity;
			}
			set
			{
				if ((this._mailingCity != value))
				{
					this.OnmailingCityChanging(value);
					this.SendPropertyChanging();
					this._mailingCity = value;
					this.SendPropertyChanged("mailingCity");
					this.OnmailingCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailingProvince", DbType="VarChar(50)")]
		public string mailingProvince
		{
			get
			{
				return this._mailingProvince;
			}
			set
			{
				if ((this._mailingProvince != value))
				{
					this.OnmailingProvinceChanging(value);
					this.SendPropertyChanging();
					this._mailingProvince = value;
					this.SendPropertyChanged("mailingProvince");
					this.OnmailingProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailingPostalCode", DbType="VarChar(6)")]
		public string mailingPostalCode
		{
			get
			{
				return this._mailingPostalCode;
			}
			set
			{
				if ((this._mailingPostalCode != value))
				{
					this.OnmailingPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._mailingPostalCode = value;
					this.SendPropertyChanged("mailingPostalCode");
					this.OnmailingPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(50)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(6)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motherName", DbType="VarChar(100)")]
		public string motherName
		{
			get
			{
				return this._motherName;
			}
			set
			{
				if ((this._motherName != value))
				{
					this.OnmotherNameChanging(value);
					this.SendPropertyChanging();
					this._motherName = value;
					this.SendPropertyChanged("motherName");
					this.OnmotherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motherPhone", DbType="VarChar(10)")]
		public string motherPhone
		{
			get
			{
				return this._motherPhone;
			}
			set
			{
				if ((this._motherPhone != value))
				{
					this.OnmotherPhoneChanging(value);
					this.SendPropertyChanging();
					this._motherPhone = value;
					this.SendPropertyChanged("motherPhone");
					this.OnmotherPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motherEmail", DbType="VarChar(100)")]
		public string motherEmail
		{
			get
			{
				return this._motherEmail;
			}
			set
			{
				if ((this._motherEmail != value))
				{
					this.OnmotherEmailChanging(value);
					this.SendPropertyChanging();
					this._motherEmail = value;
					this.SendPropertyChanged("motherEmail");
					this.OnmotherEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fatherName", DbType="VarChar(100)")]
		public string fatherName
		{
			get
			{
				return this._fatherName;
			}
			set
			{
				if ((this._fatherName != value))
				{
					this.OnfatherNameChanging(value);
					this.SendPropertyChanging();
					this._fatherName = value;
					this.SendPropertyChanged("fatherName");
					this.OnfatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fatherPhone", DbType="VarChar(10)")]
		public string fatherPhone
		{
			get
			{
				return this._fatherPhone;
			}
			set
			{
				if ((this._fatherPhone != value))
				{
					this.OnfatherPhoneChanging(value);
					this.SendPropertyChanging();
					this._fatherPhone = value;
					this.SendPropertyChanged("fatherPhone");
					this.OnfatherPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fatherEmail", DbType="VarChar(100)")]
		public string fatherEmail
		{
			get
			{
				return this._fatherEmail;
			}
			set
			{
				if ((this._fatherEmail != value))
				{
					this.OnfatherEmailChanging(value);
					this.SendPropertyChanging();
					this._fatherEmail = value;
					this.SendPropertyChanged("fatherEmail");
					this.OnfatherEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianName", DbType="VarChar(100)")]
		public string guardianName
		{
			get
			{
				return this._guardianName;
			}
			set
			{
				if ((this._guardianName != value))
				{
					this.OnguardianNameChanging(value);
					this.SendPropertyChanging();
					this._guardianName = value;
					this.SendPropertyChanged("guardianName");
					this.OnguardianNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianPhone", DbType="VarChar(10)")]
		public string guardianPhone
		{
			get
			{
				return this._guardianPhone;
			}
			set
			{
				if ((this._guardianPhone != value))
				{
					this.OnguardianPhoneChanging(value);
					this.SendPropertyChanging();
					this._guardianPhone = value;
					this.SendPropertyChanged("guardianPhone");
					this.OnguardianPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianEmail", DbType="VarChar(100)")]
		public string guardianEmail
		{
			get
			{
				return this._guardianEmail;
			}
			set
			{
				if ((this._guardianEmail != value))
				{
					this.OnguardianEmailChanging(value);
					this.SendPropertyChanging();
					this._guardianEmail = value;
					this.SendPropertyChanged("guardianEmail");
					this.OnguardianEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sourceId", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string sourceId
		{
			get
			{
				return this._sourceId;
			}
			set
			{
				if ((this._sourceId != value))
				{
					this.OnsourceIdChanging(value);
					this.SendPropertyChanging();
					this._sourceId = value;
					this.SendPropertyChanged("sourceId");
					this.OnsourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[from]", Storage="_from", DbType="SmallDateTime NOT NULL")]
		public System.DateTime from
		{
			get
			{
				return this._from;
			}
			set
			{
				if ((this._from != value))
				{
					this.OnfromChanging(value);
					this.SendPropertyChanging();
					this._from = value;
					this.SendPropertyChanged("from");
					this.OnfromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[to]", Storage="_to", DbType="SmallDateTime NOT NULL")]
		public System.DateTime to
		{
			get
			{
				return this._to;
			}
			set
			{
				if ((this._to != value))
				{
					this.OntoChanging(value);
					this.SendPropertyChanging();
					this._to = value;
					this.SendPropertyChanged("to");
					this.OntoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedBy", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string updatedBy
		{
			get
			{
				return this._updatedBy;
			}
			set
			{
				if ((this._updatedBy != value))
				{
					this.OnupdatedByChanging(value);
					this.SendPropertyChanging();
					this._updatedBy = value;
					this.SendPropertyChanged("updatedBy");
					this.OnupdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_studentHistory", Storage="_school", ThisKey="schoolId", OtherKey="id", IsForeignKey=true)]
		public school school
		{
			get
			{
				return this._school.Entity;
			}
			set
			{
				school previousValue = this._school.Entity;
				if (((previousValue != value) 
							|| (this._school.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._school.Entity = null;
						previousValue.studentHistories.Remove(this);
					}
					this._school.Entity = value;
					if ((value != null))
					{
						value.studentHistories.Add(this);
						this._schoolId = value.id;
					}
					else
					{
						this._schoolId = default(int);
					}
					this.SendPropertyChanged("school");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_studentHistory", Storage="_student", ThisKey="studentId", OtherKey="id", IsForeignKey=true)]
		public student student
		{
			get
			{
				return this._student.Entity;
			}
			set
			{
				student previousValue = this._student.Entity;
				if (((previousValue != value) 
							|| (this._student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._student.Entity = null;
						previousValue.studentHistories.Remove(this);
					}
					this._student.Entity = value;
					if ((value != null))
					{
						value.studentHistories.Add(this);
						this._studentId = value.id;
					}
					else
					{
						this._studentId = default(int);
					}
					this.SendPropertyChanged("student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.students")]
	public partial class student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _schoolId;
		
		private string _studentNumber;
		
		private string _lastName;
		
		private string _firstName;
		
		private string _middleName;
		
		private char _gender;
		
		private System.DateTime _dob;
		
		private string _grade;
		
		private string _code;
		
		private string _specialPrograms;
		
		private string _homePhone;
		
		private string _mailingAddress;
		
		private string _mailingCity;
		
		private string _mailingProvince;
		
		private string _mailingPostalCode;
		
		private string _address;
		
		private string _city;
		
		private string _province;
		
		private string _postalCode;
		
		private string _motherName;
		
		private string _motherPhone;
		
		private string _motherEmail;
		
		private string _fatherName;
		
		private string _fatherPhone;
		
		private string _fatherEmail;
		
		private string _guardianName;
		
		private string _guardianPhone;
		
		private string _guardianEmail;
		
		private string _sourceId;
		
		private System.DateTime _createdDate;
		
		private System.Nullable<System.DateTime> _updatedDate;
		
		private string _updatedBy;
		
		private System.Nullable<bool> _active;
		
		private EntitySet<userTimeRecord> _userTimeRecords;
		
		private EntitySet<studentHistory> _studentHistories;
		
		private EntitySet<studentSupportReport> _studentSupportReports;
		
		private EntitySet<studentSupportRequest> _studentSupportRequests;
		
		private EntitySet<studentTeamConsultation> _studentTeamConsultations;
		
		private EntityRef<school> _school;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnschoolIdChanging(int value);
    partial void OnschoolIdChanged();
    partial void OnstudentNumberChanging(string value);
    partial void OnstudentNumberChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnmiddleNameChanging(string value);
    partial void OnmiddleNameChanged();
    partial void OngenderChanging(char value);
    partial void OngenderChanged();
    partial void OndobChanging(System.DateTime value);
    partial void OndobChanged();
    partial void OngradeChanging(string value);
    partial void OngradeChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnspecialProgramsChanging(string value);
    partial void OnspecialProgramsChanged();
    partial void OnhomePhoneChanging(string value);
    partial void OnhomePhoneChanged();
    partial void OnmailingAddressChanging(string value);
    partial void OnmailingAddressChanged();
    partial void OnmailingCityChanging(string value);
    partial void OnmailingCityChanged();
    partial void OnmailingProvinceChanging(string value);
    partial void OnmailingProvinceChanged();
    partial void OnmailingPostalCodeChanging(string value);
    partial void OnmailingPostalCodeChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OnpostalCodeChanging(string value);
    partial void OnpostalCodeChanged();
    partial void OnmotherNameChanging(string value);
    partial void OnmotherNameChanged();
    partial void OnmotherPhoneChanging(string value);
    partial void OnmotherPhoneChanged();
    partial void OnmotherEmailChanging(string value);
    partial void OnmotherEmailChanged();
    partial void OnfatherNameChanging(string value);
    partial void OnfatherNameChanged();
    partial void OnfatherPhoneChanging(string value);
    partial void OnfatherPhoneChanged();
    partial void OnfatherEmailChanging(string value);
    partial void OnfatherEmailChanged();
    partial void OnguardianNameChanging(string value);
    partial void OnguardianNameChanged();
    partial void OnguardianPhoneChanging(string value);
    partial void OnguardianPhoneChanged();
    partial void OnguardianEmailChanging(string value);
    partial void OnguardianEmailChanged();
    partial void OnsourceIdChanging(string value);
    partial void OnsourceIdChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnupdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatedDateChanged();
    partial void OnupdatedByChanging(string value);
    partial void OnupdatedByChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public student()
		{
			this._userTimeRecords = new EntitySet<userTimeRecord>(new Action<userTimeRecord>(this.attach_userTimeRecords), new Action<userTimeRecord>(this.detach_userTimeRecords));
			this._studentHistories = new EntitySet<studentHistory>(new Action<studentHistory>(this.attach_studentHistories), new Action<studentHistory>(this.detach_studentHistories));
			this._studentSupportReports = new EntitySet<studentSupportReport>(new Action<studentSupportReport>(this.attach_studentSupportReports), new Action<studentSupportReport>(this.detach_studentSupportReports));
			this._studentSupportRequests = new EntitySet<studentSupportRequest>(new Action<studentSupportRequest>(this.attach_studentSupportRequests), new Action<studentSupportRequest>(this.detach_studentSupportRequests));
			this._studentTeamConsultations = new EntitySet<studentTeamConsultation>(new Action<studentTeamConsultation>(this.attach_studentTeamConsultations), new Action<studentTeamConsultation>(this.detach_studentTeamConsultations));
			this._school = default(EntityRef<school>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolId", DbType="Int NOT NULL")]
		public int schoolId
		{
			get
			{
				return this._schoolId;
			}
			set
			{
				if ((this._schoolId != value))
				{
					if (this._school.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolIdChanging(value);
					this.SendPropertyChanging();
					this._schoolId = value;
					this.SendPropertyChanged("schoolId");
					this.OnschoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string studentNumber
		{
			get
			{
				return this._studentNumber;
			}
			set
			{
				if ((this._studentNumber != value))
				{
					this.OnstudentNumberChanging(value);
					this.SendPropertyChanging();
					this._studentNumber = value;
					this.SendPropertyChanged("studentNumber");
					this.OnstudentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middleName", DbType="VarChar(100)")]
		public string middleName
		{
			get
			{
				return this._middleName;
			}
			set
			{
				if ((this._middleName != value))
				{
					this.OnmiddleNameChanging(value);
					this.SendPropertyChanging();
					this._middleName = value;
					this.SendPropertyChanged("middleName");
					this.OnmiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Char(1) NOT NULL")]
		public char gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grade", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string grade
		{
			get
			{
				return this._grade;
			}
			set
			{
				if ((this._grade != value))
				{
					this.OngradeChanging(value);
					this.SendPropertyChanging();
					this._grade = value;
					this.SendPropertyChanged("grade");
					this.OngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(25)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialPrograms", DbType="VarChar(250)")]
		public string specialPrograms
		{
			get
			{
				return this._specialPrograms;
			}
			set
			{
				if ((this._specialPrograms != value))
				{
					this.OnspecialProgramsChanging(value);
					this.SendPropertyChanging();
					this._specialPrograms = value;
					this.SendPropertyChanged("specialPrograms");
					this.OnspecialProgramsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homePhone", DbType="VarChar(10)")]
		public string homePhone
		{
			get
			{
				return this._homePhone;
			}
			set
			{
				if ((this._homePhone != value))
				{
					this.OnhomePhoneChanging(value);
					this.SendPropertyChanging();
					this._homePhone = value;
					this.SendPropertyChanged("homePhone");
					this.OnhomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailingAddress", DbType="VarChar(100)")]
		public string mailingAddress
		{
			get
			{
				return this._mailingAddress;
			}
			set
			{
				if ((this._mailingAddress != value))
				{
					this.OnmailingAddressChanging(value);
					this.SendPropertyChanging();
					this._mailingAddress = value;
					this.SendPropertyChanged("mailingAddress");
					this.OnmailingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailingCity", DbType="VarChar(50)")]
		public string mailingCity
		{
			get
			{
				return this._mailingCity;
			}
			set
			{
				if ((this._mailingCity != value))
				{
					this.OnmailingCityChanging(value);
					this.SendPropertyChanging();
					this._mailingCity = value;
					this.SendPropertyChanged("mailingCity");
					this.OnmailingCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailingProvince", DbType="VarChar(50)")]
		public string mailingProvince
		{
			get
			{
				return this._mailingProvince;
			}
			set
			{
				if ((this._mailingProvince != value))
				{
					this.OnmailingProvinceChanging(value);
					this.SendPropertyChanging();
					this._mailingProvince = value;
					this.SendPropertyChanged("mailingProvince");
					this.OnmailingProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mailingPostalCode", DbType="VarChar(6)")]
		public string mailingPostalCode
		{
			get
			{
				return this._mailingPostalCode;
			}
			set
			{
				if ((this._mailingPostalCode != value))
				{
					this.OnmailingPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._mailingPostalCode = value;
					this.SendPropertyChanged("mailingPostalCode");
					this.OnmailingPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(50)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalCode", DbType="VarChar(6)")]
		public string postalCode
		{
			get
			{
				return this._postalCode;
			}
			set
			{
				if ((this._postalCode != value))
				{
					this.OnpostalCodeChanging(value);
					this.SendPropertyChanging();
					this._postalCode = value;
					this.SendPropertyChanged("postalCode");
					this.OnpostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motherName", DbType="VarChar(100)")]
		public string motherName
		{
			get
			{
				return this._motherName;
			}
			set
			{
				if ((this._motherName != value))
				{
					this.OnmotherNameChanging(value);
					this.SendPropertyChanging();
					this._motherName = value;
					this.SendPropertyChanged("motherName");
					this.OnmotherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motherPhone", DbType="VarChar(10)")]
		public string motherPhone
		{
			get
			{
				return this._motherPhone;
			}
			set
			{
				if ((this._motherPhone != value))
				{
					this.OnmotherPhoneChanging(value);
					this.SendPropertyChanging();
					this._motherPhone = value;
					this.SendPropertyChanged("motherPhone");
					this.OnmotherPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motherEmail", DbType="VarChar(100)")]
		public string motherEmail
		{
			get
			{
				return this._motherEmail;
			}
			set
			{
				if ((this._motherEmail != value))
				{
					this.OnmotherEmailChanging(value);
					this.SendPropertyChanging();
					this._motherEmail = value;
					this.SendPropertyChanged("motherEmail");
					this.OnmotherEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fatherName", DbType="VarChar(100)")]
		public string fatherName
		{
			get
			{
				return this._fatherName;
			}
			set
			{
				if ((this._fatherName != value))
				{
					this.OnfatherNameChanging(value);
					this.SendPropertyChanging();
					this._fatherName = value;
					this.SendPropertyChanged("fatherName");
					this.OnfatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fatherPhone", DbType="VarChar(10)")]
		public string fatherPhone
		{
			get
			{
				return this._fatherPhone;
			}
			set
			{
				if ((this._fatherPhone != value))
				{
					this.OnfatherPhoneChanging(value);
					this.SendPropertyChanging();
					this._fatherPhone = value;
					this.SendPropertyChanged("fatherPhone");
					this.OnfatherPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fatherEmail", DbType="VarChar(100)")]
		public string fatherEmail
		{
			get
			{
				return this._fatherEmail;
			}
			set
			{
				if ((this._fatherEmail != value))
				{
					this.OnfatherEmailChanging(value);
					this.SendPropertyChanging();
					this._fatherEmail = value;
					this.SendPropertyChanged("fatherEmail");
					this.OnfatherEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianName", DbType="VarChar(100)")]
		public string guardianName
		{
			get
			{
				return this._guardianName;
			}
			set
			{
				if ((this._guardianName != value))
				{
					this.OnguardianNameChanging(value);
					this.SendPropertyChanging();
					this._guardianName = value;
					this.SendPropertyChanged("guardianName");
					this.OnguardianNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianPhone", DbType="VarChar(10)")]
		public string guardianPhone
		{
			get
			{
				return this._guardianPhone;
			}
			set
			{
				if ((this._guardianPhone != value))
				{
					this.OnguardianPhoneChanging(value);
					this.SendPropertyChanging();
					this._guardianPhone = value;
					this.SendPropertyChanged("guardianPhone");
					this.OnguardianPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianEmail", DbType="VarChar(100)")]
		public string guardianEmail
		{
			get
			{
				return this._guardianEmail;
			}
			set
			{
				if ((this._guardianEmail != value))
				{
					this.OnguardianEmailChanging(value);
					this.SendPropertyChanging();
					this._guardianEmail = value;
					this.SendPropertyChanged("guardianEmail");
					this.OnguardianEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sourceId", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string sourceId
		{
			get
			{
				return this._sourceId;
			}
			set
			{
				if ((this._sourceId != value))
				{
					this.OnsourceIdChanging(value);
					this.SendPropertyChanging();
					this._sourceId = value;
					this.SendPropertyChanged("sourceId");
					this.OnsourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> updatedDate
		{
			get
			{
				return this._updatedDate;
			}
			set
			{
				if ((this._updatedDate != value))
				{
					this.OnupdatedDateChanging(value);
					this.SendPropertyChanging();
					this._updatedDate = value;
					this.SendPropertyChanged("updatedDate");
					this.OnupdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedBy", DbType="VarChar(100)")]
		public string updatedBy
		{
			get
			{
				return this._updatedBy;
			}
			set
			{
				if ((this._updatedBy != value))
				{
					this.OnupdatedByChanging(value);
					this.SendPropertyChanging();
					this._updatedBy = value;
					this.SendPropertyChanged("updatedBy");
					this.OnupdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_userTimeRecord", Storage="_userTimeRecords", ThisKey="id", OtherKey="studentId")]
		public EntitySet<userTimeRecord> userTimeRecords
		{
			get
			{
				return this._userTimeRecords;
			}
			set
			{
				this._userTimeRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_studentHistory", Storage="_studentHistories", ThisKey="id", OtherKey="studentId")]
		public EntitySet<studentHistory> studentHistories
		{
			get
			{
				return this._studentHistories;
			}
			set
			{
				this._studentHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_studentSupportReport", Storage="_studentSupportReports", ThisKey="id", OtherKey="studentId")]
		public EntitySet<studentSupportReport> studentSupportReports
		{
			get
			{
				return this._studentSupportReports;
			}
			set
			{
				this._studentSupportReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_studentSupportRequest", Storage="_studentSupportRequests", ThisKey="id", OtherKey="studentId")]
		public EntitySet<studentSupportRequest> studentSupportRequests
		{
			get
			{
				return this._studentSupportRequests;
			}
			set
			{
				this._studentSupportRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_studentTeamConsultation", Storage="_studentTeamConsultations", ThisKey="id", OtherKey="studentId")]
		public EntitySet<studentTeamConsultation> studentTeamConsultations
		{
			get
			{
				return this._studentTeamConsultations;
			}
			set
			{
				this._studentTeamConsultations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_student", Storage="_school", ThisKey="schoolId", OtherKey="id", IsForeignKey=true)]
		public school school
		{
			get
			{
				return this._school.Entity;
			}
			set
			{
				school previousValue = this._school.Entity;
				if (((previousValue != value) 
							|| (this._school.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._school.Entity = null;
						previousValue.students.Remove(this);
					}
					this._school.Entity = value;
					if ((value != null))
					{
						value.students.Add(this);
						this._schoolId = value.id;
					}
					else
					{
						this._schoolId = default(int);
					}
					this.SendPropertyChanged("school");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_userTimeRecords(userTimeRecord entity)
		{
			this.SendPropertyChanging();
			entity.student = this;
		}
		
		private void detach_userTimeRecords(userTimeRecord entity)
		{
			this.SendPropertyChanging();
			entity.student = null;
		}
		
		private void attach_studentHistories(studentHistory entity)
		{
			this.SendPropertyChanging();
			entity.student = this;
		}
		
		private void detach_studentHistories(studentHistory entity)
		{
			this.SendPropertyChanging();
			entity.student = null;
		}
		
		private void attach_studentSupportReports(studentSupportReport entity)
		{
			this.SendPropertyChanging();
			entity.student = this;
		}
		
		private void detach_studentSupportReports(studentSupportReport entity)
		{
			this.SendPropertyChanging();
			entity.student = null;
		}
		
		private void attach_studentSupportRequests(studentSupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.student = this;
		}
		
		private void detach_studentSupportRequests(studentSupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.student = null;
		}
		
		private void attach_studentTeamConsultations(studentTeamConsultation entity)
		{
			this.SendPropertyChanging();
			entity.student = this;
		}
		
		private void detach_studentTeamConsultations(studentTeamConsultation entity)
		{
			this.SendPropertyChanging();
			entity.student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentSupportReports")]
	public partial class studentSupportReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentId;
		
		private int _specialistId;
		
		private int _studentSupportRequestId;
		
		private System.DateTime _dateStarted;
		
		private System.Nullable<System.DateTime> _dateFinalized;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
		private string _background;
		
		private string _observations;
		
		private string _interpretations;
		
		private string _goals;
		
		private string _progress;
		
		private string _recommendations;
		
		private string _summary;
		
		private string _status;
		
		private EntitySet<studentSupportReportFile> _studentSupportReportFiles;
		
		private EntityRef<student> _student;
		
		private EntityRef<studentSupportRequest> _studentSupportRequest;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentIdChanging(int value);
    partial void OnstudentIdChanged();
    partial void OnspecialistIdChanging(int value);
    partial void OnspecialistIdChanged();
    partial void OnstudentSupportRequestIdChanging(int value);
    partial void OnstudentSupportRequestIdChanged();
    partial void OndateStartedChanging(System.DateTime value);
    partial void OndateStartedChanged();
    partial void OndateFinalizedChanging(System.Nullable<System.DateTime> value);
    partial void OndateFinalizedChanged();
    partial void OnlastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdatedChanged();
    partial void OnbackgroundChanging(string value);
    partial void OnbackgroundChanged();
    partial void OnobservationsChanging(string value);
    partial void OnobservationsChanged();
    partial void OninterpretationsChanging(string value);
    partial void OninterpretationsChanged();
    partial void OngoalsChanging(string value);
    partial void OngoalsChanged();
    partial void OnprogressChanging(string value);
    partial void OnprogressChanged();
    partial void OnrecommendationsChanging(string value);
    partial void OnrecommendationsChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public studentSupportReport()
		{
			this._studentSupportReportFiles = new EntitySet<studentSupportReportFile>(new Action<studentSupportReportFile>(this.attach_studentSupportReportFiles), new Action<studentSupportReportFile>(this.detach_studentSupportReportFiles));
			this._student = default(EntityRef<student>);
			this._studentSupportRequest = default(EntityRef<studentSupportRequest>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL")]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					if (this._student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentIdChanging(value);
					this.SendPropertyChanging();
					this._studentId = value;
					this.SendPropertyChanged("studentId");
					this.OnstudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialistId", DbType="Int NOT NULL")]
		public int specialistId
		{
			get
			{
				return this._specialistId;
			}
			set
			{
				if ((this._specialistId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspecialistIdChanging(value);
					this.SendPropertyChanging();
					this._specialistId = value;
					this.SendPropertyChanged("specialistId");
					this.OnspecialistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupportRequestId", DbType="Int NOT NULL")]
		public int studentSupportRequestId
		{
			get
			{
				return this._studentSupportRequestId;
			}
			set
			{
				if ((this._studentSupportRequestId != value))
				{
					if (this._studentSupportRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentSupportRequestIdChanging(value);
					this.SendPropertyChanging();
					this._studentSupportRequestId = value;
					this.SendPropertyChanged("studentSupportRequestId");
					this.OnstudentSupportRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateStarted", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dateStarted
		{
			get
			{
				return this._dateStarted;
			}
			set
			{
				if ((this._dateStarted != value))
				{
					this.OndateStartedChanging(value);
					this.SendPropertyChanging();
					this._dateStarted = value;
					this.SendPropertyChanged("dateStarted");
					this.OndateStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFinalized", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dateFinalized
		{
			get
			{
				return this._dateFinalized;
			}
			set
			{
				if ((this._dateFinalized != value))
				{
					this.OndateFinalizedChanging(value);
					this.SendPropertyChanging();
					this._dateFinalized = value;
					this.SendPropertyChanged("dateFinalized");
					this.OndateFinalizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdated", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> lastUpdated
		{
			get
			{
				return this._lastUpdated;
			}
			set
			{
				if ((this._lastUpdated != value))
				{
					this.OnlastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._lastUpdated = value;
					this.SendPropertyChanged("lastUpdated");
					this.OnlastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_background", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string background
		{
			get
			{
				return this._background;
			}
			set
			{
				if ((this._background != value))
				{
					this.OnbackgroundChanging(value);
					this.SendPropertyChanging();
					this._background = value;
					this.SendPropertyChanged("background");
					this.OnbackgroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observations", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string observations
		{
			get
			{
				return this._observations;
			}
			set
			{
				if ((this._observations != value))
				{
					this.OnobservationsChanging(value);
					this.SendPropertyChanging();
					this._observations = value;
					this.SendPropertyChanged("observations");
					this.OnobservationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interpretations", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string interpretations
		{
			get
			{
				return this._interpretations;
			}
			set
			{
				if ((this._interpretations != value))
				{
					this.OninterpretationsChanging(value);
					this.SendPropertyChanging();
					this._interpretations = value;
					this.SendPropertyChanged("interpretations");
					this.OninterpretationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goals", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string goals
		{
			get
			{
				return this._goals;
			}
			set
			{
				if ((this._goals != value))
				{
					this.OngoalsChanging(value);
					this.SendPropertyChanging();
					this._goals = value;
					this.SendPropertyChanged("goals");
					this.OngoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_progress", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string progress
		{
			get
			{
				return this._progress;
			}
			set
			{
				if ((this._progress != value))
				{
					this.OnprogressChanging(value);
					this.SendPropertyChanging();
					this._progress = value;
					this.SendPropertyChanged("progress");
					this.OnprogressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recommendations", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string recommendations
		{
			get
			{
				return this._recommendations;
			}
			set
			{
				if ((this._recommendations != value))
				{
					this.OnrecommendationsChanging(value);
					this.SendPropertyChanging();
					this._recommendations = value;
					this.SendPropertyChanged("recommendations");
					this.OnrecommendationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if ((this._summary != value))
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportReport_studentSupportReportFile", Storage="_studentSupportReportFiles", ThisKey="id", OtherKey="studentSupportReportId")]
		public EntitySet<studentSupportReportFile> studentSupportReportFiles
		{
			get
			{
				return this._studentSupportReportFiles;
			}
			set
			{
				this._studentSupportReportFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_studentSupportReport", Storage="_student", ThisKey="studentId", OtherKey="id", IsForeignKey=true)]
		public student student
		{
			get
			{
				return this._student.Entity;
			}
			set
			{
				student previousValue = this._student.Entity;
				if (((previousValue != value) 
							|| (this._student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._student.Entity = null;
						previousValue.studentSupportReports.Remove(this);
					}
					this._student.Entity = value;
					if ((value != null))
					{
						value.studentSupportReports.Add(this);
						this._studentId = value.id;
					}
					else
					{
						this._studentId = default(int);
					}
					this.SendPropertyChanged("student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportReport", Storage="_studentSupportRequest", ThisKey="studentSupportRequestId", OtherKey="id", IsForeignKey=true)]
		public studentSupportRequest studentSupportRequest
		{
			get
			{
				return this._studentSupportRequest.Entity;
			}
			set
			{
				studentSupportRequest previousValue = this._studentSupportRequest.Entity;
				if (((previousValue != value) 
							|| (this._studentSupportRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._studentSupportRequest.Entity = null;
						previousValue.studentSupportReports.Remove(this);
					}
					this._studentSupportRequest.Entity = value;
					if ((value != null))
					{
						value.studentSupportReports.Add(this);
						this._studentSupportRequestId = value.id;
					}
					else
					{
						this._studentSupportRequestId = default(int);
					}
					this.SendPropertyChanged("studentSupportRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportReport", Storage="_user", ThisKey="specialistId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.studentSupportReports.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.studentSupportReports.Add(this);
						this._specialistId = value.id;
					}
					else
					{
						this._specialistId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_studentSupportReportFiles(studentSupportReportFile entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportReport = this;
		}
		
		private void detach_studentSupportReportFiles(studentSupportReportFile entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportReport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentSupportRequestAssignments")]
	public partial class studentSupportRequestAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentSupportRequestId;
		
		private int _specialistId;
		
		private int _supportRequestTypeId;
		
		private System.DateTime _dateAssigned;
		
		private EntityRef<studentSupportRequest> _studentSupportRequest;
		
		private EntityRef<supportRequestType> _supportRequestType;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentSupportRequestIdChanging(int value);
    partial void OnstudentSupportRequestIdChanged();
    partial void OnspecialistIdChanging(int value);
    partial void OnspecialistIdChanged();
    partial void OnsupportRequestTypeIdChanging(int value);
    partial void OnsupportRequestTypeIdChanged();
    partial void OndateAssignedChanging(System.DateTime value);
    partial void OndateAssignedChanged();
    #endregion
		
		public studentSupportRequestAssignment()
		{
			this._studentSupportRequest = default(EntityRef<studentSupportRequest>);
			this._supportRequestType = default(EntityRef<supportRequestType>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupportRequestId", DbType="Int NOT NULL")]
		public int studentSupportRequestId
		{
			get
			{
				return this._studentSupportRequestId;
			}
			set
			{
				if ((this._studentSupportRequestId != value))
				{
					if (this._studentSupportRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentSupportRequestIdChanging(value);
					this.SendPropertyChanging();
					this._studentSupportRequestId = value;
					this.SendPropertyChanged("studentSupportRequestId");
					this.OnstudentSupportRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialistId", DbType="Int NOT NULL")]
		public int specialistId
		{
			get
			{
				return this._specialistId;
			}
			set
			{
				if ((this._specialistId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnspecialistIdChanging(value);
					this.SendPropertyChanging();
					this._specialistId = value;
					this.SendPropertyChanged("specialistId");
					this.OnspecialistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supportRequestTypeId", DbType="Int NOT NULL")]
		public int supportRequestTypeId
		{
			get
			{
				return this._supportRequestTypeId;
			}
			set
			{
				if ((this._supportRequestTypeId != value))
				{
					if (this._supportRequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsupportRequestTypeIdChanging(value);
					this.SendPropertyChanging();
					this._supportRequestTypeId = value;
					this.SendPropertyChanged("supportRequestTypeId");
					this.OnsupportRequestTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAssigned", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dateAssigned
		{
			get
			{
				return this._dateAssigned;
			}
			set
			{
				if ((this._dateAssigned != value))
				{
					this.OndateAssignedChanging(value);
					this.SendPropertyChanging();
					this._dateAssigned = value;
					this.SendPropertyChanged("dateAssigned");
					this.OndateAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportRequestAssignment", Storage="_studentSupportRequest", ThisKey="studentSupportRequestId", OtherKey="id", IsForeignKey=true)]
		public studentSupportRequest studentSupportRequest
		{
			get
			{
				return this._studentSupportRequest.Entity;
			}
			set
			{
				studentSupportRequest previousValue = this._studentSupportRequest.Entity;
				if (((previousValue != value) 
							|| (this._studentSupportRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._studentSupportRequest.Entity = null;
						previousValue.studentSupportRequestAssignments.Remove(this);
					}
					this._studentSupportRequest.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequestAssignments.Add(this);
						this._studentSupportRequestId = value.id;
					}
					else
					{
						this._studentSupportRequestId = default(int);
					}
					this.SendPropertyChanged("studentSupportRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supportRequestType_studentSupportRequestAssignment", Storage="_supportRequestType", ThisKey="supportRequestTypeId", OtherKey="id", IsForeignKey=true)]
		public supportRequestType supportRequestType
		{
			get
			{
				return this._supportRequestType.Entity;
			}
			set
			{
				supportRequestType previousValue = this._supportRequestType.Entity;
				if (((previousValue != value) 
							|| (this._supportRequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supportRequestType.Entity = null;
						previousValue.studentSupportRequestAssignments.Remove(this);
					}
					this._supportRequestType.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequestAssignments.Add(this);
						this._supportRequestTypeId = value.id;
					}
					else
					{
						this._supportRequestTypeId = default(int);
					}
					this.SendPropertyChanged("supportRequestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportRequestAssignment", Storage="_user", ThisKey="specialistId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.studentSupportRequestAssignments.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequestAssignments.Add(this);
						this._specialistId = value.id;
					}
					else
					{
						this._specialistId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentSupportRequestFiles")]
	public partial class studentSupportRequestFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentSupportRequestId;
		
		private string _fileName;
		
		private System.Data.Linq.Binary _fileContent;
		
		private System.DateTime _dateUploaded;
		
		private EntityRef<studentSupportRequest> _studentSupportRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentSupportRequestIdChanging(int value);
    partial void OnstudentSupportRequestIdChanged();
    partial void OnfileNameChanging(string value);
    partial void OnfileNameChanged();
    partial void OnfileContentChanging(System.Data.Linq.Binary value);
    partial void OnfileContentChanged();
    partial void OndateUploadedChanging(System.DateTime value);
    partial void OndateUploadedChanged();
    #endregion
		
		public studentSupportRequestFile()
		{
			this._studentSupportRequest = default(EntityRef<studentSupportRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupportRequestId", DbType="Int NOT NULL")]
		public int studentSupportRequestId
		{
			get
			{
				return this._studentSupportRequestId;
			}
			set
			{
				if ((this._studentSupportRequestId != value))
				{
					if (this._studentSupportRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentSupportRequestIdChanging(value);
					this.SendPropertyChanging();
					this._studentSupportRequestId = value;
					this.SendPropertyChanged("studentSupportRequestId");
					this.OnstudentSupportRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string fileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnfileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("fileName");
					this.OnfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileContent", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary fileContent
		{
			get
			{
				return this._fileContent;
			}
			set
			{
				if ((this._fileContent != value))
				{
					this.OnfileContentChanging(value);
					this.SendPropertyChanging();
					this._fileContent = value;
					this.SendPropertyChanged("fileContent");
					this.OnfileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateUploaded", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dateUploaded
		{
			get
			{
				return this._dateUploaded;
			}
			set
			{
				if ((this._dateUploaded != value))
				{
					this.OndateUploadedChanging(value);
					this.SendPropertyChanging();
					this._dateUploaded = value;
					this.SendPropertyChanged("dateUploaded");
					this.OndateUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportRequestFile", Storage="_studentSupportRequest", ThisKey="studentSupportRequestId", OtherKey="id", IsForeignKey=true)]
		public studentSupportRequest studentSupportRequest
		{
			get
			{
				return this._studentSupportRequest.Entity;
			}
			set
			{
				studentSupportRequest previousValue = this._studentSupportRequest.Entity;
				if (((previousValue != value) 
							|| (this._studentSupportRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._studentSupportRequest.Entity = null;
						previousValue.studentSupportRequestFiles.Remove(this);
					}
					this._studentSupportRequest.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequestFiles.Add(this);
						this._studentSupportRequestId = value.id;
					}
					else
					{
						this._studentSupportRequestId = default(int);
					}
					this.SendPropertyChanged("studentSupportRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentSupportRequestNotification")]
	public partial class studentSupportRequestNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentSupportRequestId;
		
		private int _userId;
		
		private EntityRef<studentSupportRequest> _studentSupportRequest;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentSupportRequestIdChanging(int value);
    partial void OnstudentSupportRequestIdChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    #endregion
		
		public studentSupportRequestNotification()
		{
			this._studentSupportRequest = default(EntityRef<studentSupportRequest>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupportRequestId", DbType="Int NOT NULL")]
		public int studentSupportRequestId
		{
			get
			{
				return this._studentSupportRequestId;
			}
			set
			{
				if ((this._studentSupportRequestId != value))
				{
					if (this._studentSupportRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentSupportRequestIdChanging(value);
					this.SendPropertyChanging();
					this._studentSupportRequestId = value;
					this.SendPropertyChanged("studentSupportRequestId");
					this.OnstudentSupportRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportRequestNotification", Storage="_studentSupportRequest", ThisKey="studentSupportRequestId", OtherKey="id", IsForeignKey=true)]
		public studentSupportRequest studentSupportRequest
		{
			get
			{
				return this._studentSupportRequest.Entity;
			}
			set
			{
				studentSupportRequest previousValue = this._studentSupportRequest.Entity;
				if (((previousValue != value) 
							|| (this._studentSupportRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._studentSupportRequest.Entity = null;
						previousValue.studentSupportRequestNotifications.Remove(this);
					}
					this._studentSupportRequest.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequestNotifications.Add(this);
						this._studentSupportRequestId = value.id;
					}
					else
					{
						this._studentSupportRequestId = default(int);
					}
					this.SendPropertyChanged("studentSupportRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportRequestNotification", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.studentSupportRequestNotifications.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequestNotifications.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentSupportRequests")]
	public partial class studentSupportRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentId;
		
		private int _requestedBy;
		
		private System.DateTime _dateRequested;
		
		private string _reason;
		
		private string _approvalNote;
		
		private bool _approved;
		
		private bool _denied;
		
		private System.Nullable<int> _whoApproved;
		
		private System.Nullable<System.DateTime> _dateApproved;
		
		private bool _submitted;
		
		private EntitySet<studentSupportReport> _studentSupportReports;
		
		private EntitySet<studentSupportRequestAssignment> _studentSupportRequestAssignments;
		
		private EntitySet<studentSupportRequestFile> _studentSupportRequestFiles;
		
		private EntitySet<studentSupportRequestNotification> _studentSupportRequestNotifications;
		
		private EntitySet<studentSupportRequestType> _studentSupportRequestTypes;
		
		private EntityRef<student> _student;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentIdChanging(int value);
    partial void OnstudentIdChanged();
    partial void OnrequestedByChanging(int value);
    partial void OnrequestedByChanged();
    partial void OndateRequestedChanging(System.DateTime value);
    partial void OndateRequestedChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OnapprovalNoteChanging(string value);
    partial void OnapprovalNoteChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    partial void OndeniedChanging(bool value);
    partial void OndeniedChanged();
    partial void OnwhoApprovedChanging(System.Nullable<int> value);
    partial void OnwhoApprovedChanged();
    partial void OndateApprovedChanging(System.Nullable<System.DateTime> value);
    partial void OndateApprovedChanged();
    partial void OnsubmittedChanging(bool value);
    partial void OnsubmittedChanged();
    #endregion
		
		public studentSupportRequest()
		{
			this._studentSupportReports = new EntitySet<studentSupportReport>(new Action<studentSupportReport>(this.attach_studentSupportReports), new Action<studentSupportReport>(this.detach_studentSupportReports));
			this._studentSupportRequestAssignments = new EntitySet<studentSupportRequestAssignment>(new Action<studentSupportRequestAssignment>(this.attach_studentSupportRequestAssignments), new Action<studentSupportRequestAssignment>(this.detach_studentSupportRequestAssignments));
			this._studentSupportRequestFiles = new EntitySet<studentSupportRequestFile>(new Action<studentSupportRequestFile>(this.attach_studentSupportRequestFiles), new Action<studentSupportRequestFile>(this.detach_studentSupportRequestFiles));
			this._studentSupportRequestNotifications = new EntitySet<studentSupportRequestNotification>(new Action<studentSupportRequestNotification>(this.attach_studentSupportRequestNotifications), new Action<studentSupportRequestNotification>(this.detach_studentSupportRequestNotifications));
			this._studentSupportRequestTypes = new EntitySet<studentSupportRequestType>(new Action<studentSupportRequestType>(this.attach_studentSupportRequestTypes), new Action<studentSupportRequestType>(this.detach_studentSupportRequestTypes));
			this._student = default(EntityRef<student>);
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL")]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					if (this._student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentIdChanging(value);
					this.SendPropertyChanging();
					this._studentId = value;
					this.SendPropertyChanged("studentId");
					this.OnstudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestedBy", DbType="Int NOT NULL")]
		public int requestedBy
		{
			get
			{
				return this._requestedBy;
			}
			set
			{
				if ((this._requestedBy != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrequestedByChanging(value);
					this.SendPropertyChanging();
					this._requestedBy = value;
					this.SendPropertyChanged("requestedBy");
					this.OnrequestedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRequested", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dateRequested
		{
			get
			{
				return this._dateRequested;
			}
			set
			{
				if ((this._dateRequested != value))
				{
					this.OndateRequestedChanging(value);
					this.SendPropertyChanging();
					this._dateRequested = value;
					this.SendPropertyChanged("dateRequested");
					this.OndateRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approvalNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string approvalNote
		{
			get
			{
				return this._approvalNote;
			}
			set
			{
				if ((this._approvalNote != value))
				{
					this.OnapprovalNoteChanging(value);
					this.SendPropertyChanging();
					this._approvalNote = value;
					this.SendPropertyChanged("approvalNote");
					this.OnapprovalNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_denied", DbType="Bit NOT NULL")]
		public bool denied
		{
			get
			{
				return this._denied;
			}
			set
			{
				if ((this._denied != value))
				{
					this.OndeniedChanging(value);
					this.SendPropertyChanging();
					this._denied = value;
					this.SendPropertyChanged("denied");
					this.OndeniedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_whoApproved", DbType="Int")]
		public System.Nullable<int> whoApproved
		{
			get
			{
				return this._whoApproved;
			}
			set
			{
				if ((this._whoApproved != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwhoApprovedChanging(value);
					this.SendPropertyChanging();
					this._whoApproved = value;
					this.SendPropertyChanged("whoApproved");
					this.OnwhoApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateApproved", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dateApproved
		{
			get
			{
				return this._dateApproved;
			}
			set
			{
				if ((this._dateApproved != value))
				{
					this.OndateApprovedChanging(value);
					this.SendPropertyChanging();
					this._dateApproved = value;
					this.SendPropertyChanged("dateApproved");
					this.OndateApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitted", DbType="Bit NOT NULL")]
		public bool submitted
		{
			get
			{
				return this._submitted;
			}
			set
			{
				if ((this._submitted != value))
				{
					this.OnsubmittedChanging(value);
					this.SendPropertyChanging();
					this._submitted = value;
					this.SendPropertyChanged("submitted");
					this.OnsubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportReport", Storage="_studentSupportReports", ThisKey="id", OtherKey="studentSupportRequestId")]
		public EntitySet<studentSupportReport> studentSupportReports
		{
			get
			{
				return this._studentSupportReports;
			}
			set
			{
				this._studentSupportReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportRequestAssignment", Storage="_studentSupportRequestAssignments", ThisKey="id", OtherKey="studentSupportRequestId")]
		public EntitySet<studentSupportRequestAssignment> studentSupportRequestAssignments
		{
			get
			{
				return this._studentSupportRequestAssignments;
			}
			set
			{
				this._studentSupportRequestAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportRequestFile", Storage="_studentSupportRequestFiles", ThisKey="id", OtherKey="studentSupportRequestId")]
		public EntitySet<studentSupportRequestFile> studentSupportRequestFiles
		{
			get
			{
				return this._studentSupportRequestFiles;
			}
			set
			{
				this._studentSupportRequestFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportRequestNotification", Storage="_studentSupportRequestNotifications", ThisKey="id", OtherKey="studentSupportRequestId")]
		public EntitySet<studentSupportRequestNotification> studentSupportRequestNotifications
		{
			get
			{
				return this._studentSupportRequestNotifications;
			}
			set
			{
				this._studentSupportRequestNotifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportRequestType", Storage="_studentSupportRequestTypes", ThisKey="id", OtherKey="studentSupportRequestId")]
		public EntitySet<studentSupportRequestType> studentSupportRequestTypes
		{
			get
			{
				return this._studentSupportRequestTypes;
			}
			set
			{
				this._studentSupportRequestTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_studentSupportRequest", Storage="_student", ThisKey="studentId", OtherKey="id", IsForeignKey=true)]
		public student student
		{
			get
			{
				return this._student.Entity;
			}
			set
			{
				student previousValue = this._student.Entity;
				if (((previousValue != value) 
							|| (this._student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._student.Entity = null;
						previousValue.studentSupportRequests.Remove(this);
					}
					this._student.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequests.Add(this);
						this._studentId = value.id;
					}
					else
					{
						this._studentId = default(int);
					}
					this.SendPropertyChanged("student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportRequest", Storage="_user", ThisKey="requestedBy", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.studentSupportRequests.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequests.Add(this);
						this._requestedBy = value.id;
					}
					else
					{
						this._requestedBy = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportRequest1", Storage="_user1", ThisKey="whoApproved", OtherKey="id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.studentSupportRequests1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequests1.Add(this);
						this._whoApproved = value.id;
					}
					else
					{
						this._whoApproved = default(Nullable<int>);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_studentSupportReports(studentSupportReport entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = this;
		}
		
		private void detach_studentSupportReports(studentSupportReport entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = null;
		}
		
		private void attach_studentSupportRequestAssignments(studentSupportRequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = this;
		}
		
		private void detach_studentSupportRequestAssignments(studentSupportRequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = null;
		}
		
		private void attach_studentSupportRequestFiles(studentSupportRequestFile entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = this;
		}
		
		private void detach_studentSupportRequestFiles(studentSupportRequestFile entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = null;
		}
		
		private void attach_studentSupportRequestNotifications(studentSupportRequestNotification entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = this;
		}
		
		private void detach_studentSupportRequestNotifications(studentSupportRequestNotification entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = null;
		}
		
		private void attach_studentSupportRequestTypes(studentSupportRequestType entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = this;
		}
		
		private void detach_studentSupportRequestTypes(studentSupportRequestType entity)
		{
			this.SendPropertyChanging();
			entity.studentSupportRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentSupportRequestTypes")]
	public partial class studentSupportRequestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentSupportRequestId;
		
		private int _supportRequestTypeId;
		
		private bool _approved;
		
		private EntityRef<studentSupportRequest> _studentSupportRequest;
		
		private EntityRef<supportRequestType> _supportRequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentSupportRequestIdChanging(int value);
    partial void OnstudentSupportRequestIdChanged();
    partial void OnsupportRequestTypeIdChanging(int value);
    partial void OnsupportRequestTypeIdChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    #endregion
		
		public studentSupportRequestType()
		{
			this._studentSupportRequest = default(EntityRef<studentSupportRequest>);
			this._supportRequestType = default(EntityRef<supportRequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupportRequestId", DbType="Int NOT NULL")]
		public int studentSupportRequestId
		{
			get
			{
				return this._studentSupportRequestId;
			}
			set
			{
				if ((this._studentSupportRequestId != value))
				{
					if (this._studentSupportRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentSupportRequestIdChanging(value);
					this.SendPropertyChanging();
					this._studentSupportRequestId = value;
					this.SendPropertyChanged("studentSupportRequestId");
					this.OnstudentSupportRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supportRequestTypeId", DbType="Int NOT NULL")]
		public int supportRequestTypeId
		{
			get
			{
				return this._supportRequestTypeId;
			}
			set
			{
				if ((this._supportRequestTypeId != value))
				{
					if (this._supportRequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsupportRequestTypeIdChanging(value);
					this.SendPropertyChanging();
					this._supportRequestTypeId = value;
					this.SendPropertyChanged("supportRequestTypeId");
					this.OnsupportRequestTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportRequest_studentSupportRequestType", Storage="_studentSupportRequest", ThisKey="studentSupportRequestId", OtherKey="id", IsForeignKey=true)]
		public studentSupportRequest studentSupportRequest
		{
			get
			{
				return this._studentSupportRequest.Entity;
			}
			set
			{
				studentSupportRequest previousValue = this._studentSupportRequest.Entity;
				if (((previousValue != value) 
							|| (this._studentSupportRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._studentSupportRequest.Entity = null;
						previousValue.studentSupportRequestTypes.Remove(this);
					}
					this._studentSupportRequest.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequestTypes.Add(this);
						this._studentSupportRequestId = value.id;
					}
					else
					{
						this._studentSupportRequestId = default(int);
					}
					this.SendPropertyChanged("studentSupportRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supportRequestType_studentSupportRequestType", Storage="_supportRequestType", ThisKey="supportRequestTypeId", OtherKey="id", IsForeignKey=true)]
		public supportRequestType supportRequestType
		{
			get
			{
				return this._supportRequestType.Entity;
			}
			set
			{
				supportRequestType previousValue = this._supportRequestType.Entity;
				if (((previousValue != value) 
							|| (this._supportRequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supportRequestType.Entity = null;
						previousValue.studentSupportRequestTypes.Remove(this);
					}
					this._supportRequestType.Entity = value;
					if ((value != null))
					{
						value.studentSupportRequestTypes.Add(this);
						this._supportRequestTypeId = value.id;
					}
					else
					{
						this._supportRequestTypeId = default(int);
					}
					this.SendPropertyChanged("supportRequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentTeamConsultationFiles")]
	public partial class studentTeamConsultationFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentTeamConsultationId;
		
		private string _fileName;
		
		private System.Data.Linq.Binary _fileContent;
		
		private EntityRef<studentTeamConsultation> _studentTeamConsultation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentTeamConsultationIdChanging(int value);
    partial void OnstudentTeamConsultationIdChanged();
    partial void OnfileNameChanging(string value);
    partial void OnfileNameChanged();
    partial void OnfileContentChanging(System.Data.Linq.Binary value);
    partial void OnfileContentChanged();
    #endregion
		
		public studentTeamConsultationFile()
		{
			this._studentTeamConsultation = default(EntityRef<studentTeamConsultation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentTeamConsultationId", DbType="Int NOT NULL")]
		public int studentTeamConsultationId
		{
			get
			{
				return this._studentTeamConsultationId;
			}
			set
			{
				if ((this._studentTeamConsultationId != value))
				{
					if (this._studentTeamConsultation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentTeamConsultationIdChanging(value);
					this.SendPropertyChanging();
					this._studentTeamConsultationId = value;
					this.SendPropertyChanged("studentTeamConsultationId");
					this.OnstudentTeamConsultationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string fileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnfileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("fileName");
					this.OnfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileContent", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary fileContent
		{
			get
			{
				return this._fileContent;
			}
			set
			{
				if ((this._fileContent != value))
				{
					this.OnfileContentChanging(value);
					this.SendPropertyChanging();
					this._fileContent = value;
					this.SendPropertyChanged("fileContent");
					this.OnfileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentTeamConsultation_studentTeamConsultationFile", Storage="_studentTeamConsultation", ThisKey="studentTeamConsultationId", OtherKey="id", IsForeignKey=true)]
		public studentTeamConsultation studentTeamConsultation
		{
			get
			{
				return this._studentTeamConsultation.Entity;
			}
			set
			{
				studentTeamConsultation previousValue = this._studentTeamConsultation.Entity;
				if (((previousValue != value) 
							|| (this._studentTeamConsultation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._studentTeamConsultation.Entity = null;
						previousValue.studentTeamConsultationFiles.Remove(this);
					}
					this._studentTeamConsultation.Entity = value;
					if ((value != null))
					{
						value.studentTeamConsultationFiles.Add(this);
						this._studentTeamConsultationId = value.id;
					}
					else
					{
						this._studentTeamConsultationId = default(int);
					}
					this.SendPropertyChanged("studentTeamConsultation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentTeamConsultationMembership")]
	public partial class studentTeamConsultationMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentTeamConsultationId;
		
		private int _userId;
		
		private bool _finalized;
		
		private System.Nullable<System.DateTime> _dateFinalized;
		
		private EntityRef<studentTeamConsultation> _studentTeamConsultation;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentTeamConsultationIdChanging(int value);
    partial void OnstudentTeamConsultationIdChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnfinalizedChanging(bool value);
    partial void OnfinalizedChanged();
    partial void OndateFinalizedChanging(System.Nullable<System.DateTime> value);
    partial void OndateFinalizedChanged();
    #endregion
		
		public studentTeamConsultationMembership()
		{
			this._studentTeamConsultation = default(EntityRef<studentTeamConsultation>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentTeamConsultationId", DbType="Int NOT NULL")]
		public int studentTeamConsultationId
		{
			get
			{
				return this._studentTeamConsultationId;
			}
			set
			{
				if ((this._studentTeamConsultationId != value))
				{
					if (this._studentTeamConsultation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentTeamConsultationIdChanging(value);
					this.SendPropertyChanging();
					this._studentTeamConsultationId = value;
					this.SendPropertyChanged("studentTeamConsultationId");
					this.OnstudentTeamConsultationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finalized", DbType="Bit NOT NULL")]
		public bool finalized
		{
			get
			{
				return this._finalized;
			}
			set
			{
				if ((this._finalized != value))
				{
					this.OnfinalizedChanging(value);
					this.SendPropertyChanging();
					this._finalized = value;
					this.SendPropertyChanged("finalized");
					this.OnfinalizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFinalized", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dateFinalized
		{
			get
			{
				return this._dateFinalized;
			}
			set
			{
				if ((this._dateFinalized != value))
				{
					this.OndateFinalizedChanging(value);
					this.SendPropertyChanging();
					this._dateFinalized = value;
					this.SendPropertyChanged("dateFinalized");
					this.OndateFinalizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentTeamConsultation_studentTeamConsultationMembership", Storage="_studentTeamConsultation", ThisKey="studentTeamConsultationId", OtherKey="id", IsForeignKey=true)]
		public studentTeamConsultation studentTeamConsultation
		{
			get
			{
				return this._studentTeamConsultation.Entity;
			}
			set
			{
				studentTeamConsultation previousValue = this._studentTeamConsultation.Entity;
				if (((previousValue != value) 
							|| (this._studentTeamConsultation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._studentTeamConsultation.Entity = null;
						previousValue.studentTeamConsultationMemberships.Remove(this);
					}
					this._studentTeamConsultation.Entity = value;
					if ((value != null))
					{
						value.studentTeamConsultationMemberships.Add(this);
						this._studentTeamConsultationId = value.id;
					}
					else
					{
						this._studentTeamConsultationId = default(int);
					}
					this.SendPropertyChanged("studentTeamConsultation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentTeamConsultationMembership", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.studentTeamConsultationMemberships.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.studentTeamConsultationMemberships.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentTeamConsultations")]
	public partial class studentTeamConsultation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentId;
		
		private System.DateTime _dateStarted;
		
		private System.DateTime _dateFinalized;
		
		private string _background;
		
		private string _observations;
		
		private string _interpretations;
		
		private string _goals;
		
		private string _progress;
		
		private string _recommendations;
		
		private string _summary;
		
		private string _status;
		
		private EntitySet<studentTeamConsultationFile> _studentTeamConsultationFiles;
		
		private EntitySet<studentTeamConsultationMembership> _studentTeamConsultationMemberships;
		
		private EntityRef<student> _student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentIdChanging(int value);
    partial void OnstudentIdChanged();
    partial void OndateStartedChanging(System.DateTime value);
    partial void OndateStartedChanged();
    partial void OndateFinalizedChanging(System.DateTime value);
    partial void OndateFinalizedChanged();
    partial void OnbackgroundChanging(string value);
    partial void OnbackgroundChanged();
    partial void OnobservationsChanging(string value);
    partial void OnobservationsChanged();
    partial void OninterpretationsChanging(string value);
    partial void OninterpretationsChanged();
    partial void OngoalsChanging(string value);
    partial void OngoalsChanged();
    partial void OnprogressChanging(string value);
    partial void OnprogressChanged();
    partial void OnrecommendationsChanging(string value);
    partial void OnrecommendationsChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public studentTeamConsultation()
		{
			this._studentTeamConsultationFiles = new EntitySet<studentTeamConsultationFile>(new Action<studentTeamConsultationFile>(this.attach_studentTeamConsultationFiles), new Action<studentTeamConsultationFile>(this.detach_studentTeamConsultationFiles));
			this._studentTeamConsultationMemberships = new EntitySet<studentTeamConsultationMembership>(new Action<studentTeamConsultationMembership>(this.attach_studentTeamConsultationMemberships), new Action<studentTeamConsultationMembership>(this.detach_studentTeamConsultationMemberships));
			this._student = default(EntityRef<student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL")]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					if (this._student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentIdChanging(value);
					this.SendPropertyChanging();
					this._studentId = value;
					this.SendPropertyChanged("studentId");
					this.OnstudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateStarted", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dateStarted
		{
			get
			{
				return this._dateStarted;
			}
			set
			{
				if ((this._dateStarted != value))
				{
					this.OndateStartedChanging(value);
					this.SendPropertyChanging();
					this._dateStarted = value;
					this.SendPropertyChanged("dateStarted");
					this.OndateStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFinalized", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dateFinalized
		{
			get
			{
				return this._dateFinalized;
			}
			set
			{
				if ((this._dateFinalized != value))
				{
					this.OndateFinalizedChanging(value);
					this.SendPropertyChanging();
					this._dateFinalized = value;
					this.SendPropertyChanged("dateFinalized");
					this.OndateFinalizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_background", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string background
		{
			get
			{
				return this._background;
			}
			set
			{
				if ((this._background != value))
				{
					this.OnbackgroundChanging(value);
					this.SendPropertyChanging();
					this._background = value;
					this.SendPropertyChanged("background");
					this.OnbackgroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observations", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string observations
		{
			get
			{
				return this._observations;
			}
			set
			{
				if ((this._observations != value))
				{
					this.OnobservationsChanging(value);
					this.SendPropertyChanging();
					this._observations = value;
					this.SendPropertyChanged("observations");
					this.OnobservationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interpretations", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string interpretations
		{
			get
			{
				return this._interpretations;
			}
			set
			{
				if ((this._interpretations != value))
				{
					this.OninterpretationsChanging(value);
					this.SendPropertyChanging();
					this._interpretations = value;
					this.SendPropertyChanged("interpretations");
					this.OninterpretationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goals", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string goals
		{
			get
			{
				return this._goals;
			}
			set
			{
				if ((this._goals != value))
				{
					this.OngoalsChanging(value);
					this.SendPropertyChanging();
					this._goals = value;
					this.SendPropertyChanged("goals");
					this.OngoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_progress", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string progress
		{
			get
			{
				return this._progress;
			}
			set
			{
				if ((this._progress != value))
				{
					this.OnprogressChanging(value);
					this.SendPropertyChanging();
					this._progress = value;
					this.SendPropertyChanged("progress");
					this.OnprogressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recommendations", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string recommendations
		{
			get
			{
				return this._recommendations;
			}
			set
			{
				if ((this._recommendations != value))
				{
					this.OnrecommendationsChanging(value);
					this.SendPropertyChanging();
					this._recommendations = value;
					this.SendPropertyChanged("recommendations");
					this.OnrecommendationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if ((this._summary != value))
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentTeamConsultation_studentTeamConsultationFile", Storage="_studentTeamConsultationFiles", ThisKey="id", OtherKey="studentTeamConsultationId")]
		public EntitySet<studentTeamConsultationFile> studentTeamConsultationFiles
		{
			get
			{
				return this._studentTeamConsultationFiles;
			}
			set
			{
				this._studentTeamConsultationFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentTeamConsultation_studentTeamConsultationMembership", Storage="_studentTeamConsultationMemberships", ThisKey="id", OtherKey="studentTeamConsultationId")]
		public EntitySet<studentTeamConsultationMembership> studentTeamConsultationMemberships
		{
			get
			{
				return this._studentTeamConsultationMemberships;
			}
			set
			{
				this._studentTeamConsultationMemberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_studentTeamConsultation", Storage="_student", ThisKey="studentId", OtherKey="id", IsForeignKey=true)]
		public student student
		{
			get
			{
				return this._student.Entity;
			}
			set
			{
				student previousValue = this._student.Entity;
				if (((previousValue != value) 
							|| (this._student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._student.Entity = null;
						previousValue.studentTeamConsultations.Remove(this);
					}
					this._student.Entity = value;
					if ((value != null))
					{
						value.studentTeamConsultations.Add(this);
						this._studentId = value.id;
					}
					else
					{
						this._studentId = default(int);
					}
					this.SendPropertyChanged("student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_studentTeamConsultationFiles(studentTeamConsultationFile entity)
		{
			this.SendPropertyChanging();
			entity.studentTeamConsultation = this;
		}
		
		private void detach_studentTeamConsultationFiles(studentTeamConsultationFile entity)
		{
			this.SendPropertyChanging();
			entity.studentTeamConsultation = null;
		}
		
		private void attach_studentTeamConsultationMemberships(studentTeamConsultationMembership entity)
		{
			this.SendPropertyChanging();
			entity.studentTeamConsultation = this;
		}
		
		private void detach_studentTeamConsultationMemberships(studentTeamConsultationMembership entity)
		{
			this.SendPropertyChanging();
			entity.studentTeamConsultation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.supportRequestTypes")]
	public partial class supportRequestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<studentSupportRequestAssignment> _studentSupportRequestAssignments;
		
		private EntitySet<studentSupportRequestType> _studentSupportRequestTypes;
		
		private EntitySet<userSupportType> _userSupportTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public supportRequestType()
		{
			this._studentSupportRequestAssignments = new EntitySet<studentSupportRequestAssignment>(new Action<studentSupportRequestAssignment>(this.attach_studentSupportRequestAssignments), new Action<studentSupportRequestAssignment>(this.detach_studentSupportRequestAssignments));
			this._studentSupportRequestTypes = new EntitySet<studentSupportRequestType>(new Action<studentSupportRequestType>(this.attach_studentSupportRequestTypes), new Action<studentSupportRequestType>(this.detach_studentSupportRequestTypes));
			this._userSupportTypes = new EntitySet<userSupportType>(new Action<userSupportType>(this.attach_userSupportTypes), new Action<userSupportType>(this.detach_userSupportTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supportRequestType_studentSupportRequestAssignment", Storage="_studentSupportRequestAssignments", ThisKey="id", OtherKey="supportRequestTypeId")]
		public EntitySet<studentSupportRequestAssignment> studentSupportRequestAssignments
		{
			get
			{
				return this._studentSupportRequestAssignments;
			}
			set
			{
				this._studentSupportRequestAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supportRequestType_studentSupportRequestType", Storage="_studentSupportRequestTypes", ThisKey="id", OtherKey="supportRequestTypeId")]
		public EntitySet<studentSupportRequestType> studentSupportRequestTypes
		{
			get
			{
				return this._studentSupportRequestTypes;
			}
			set
			{
				this._studentSupportRequestTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supportRequestType_userSupportType", Storage="_userSupportTypes", ThisKey="id", OtherKey="supportRequestTypeId")]
		public EntitySet<userSupportType> userSupportTypes
		{
			get
			{
				return this._userSupportTypes;
			}
			set
			{
				this._userSupportTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_studentSupportRequestAssignments(studentSupportRequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.supportRequestType = this;
		}
		
		private void detach_studentSupportRequestAssignments(studentSupportRequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.supportRequestType = null;
		}
		
		private void attach_studentSupportRequestTypes(studentSupportRequestType entity)
		{
			this.SendPropertyChanging();
			entity.supportRequestType = this;
		}
		
		private void detach_studentSupportRequestTypes(studentSupportRequestType entity)
		{
			this.SendPropertyChanging();
			entity.supportRequestType = null;
		}
		
		private void attach_userSupportTypes(userSupportType entity)
		{
			this.SendPropertyChanging();
			entity.supportRequestType = this;
		}
		
		private void detach_userSupportTypes(userSupportType entity)
		{
			this.SendPropertyChanging();
			entity.supportRequestType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userActions")]
	public partial class userAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _userId;
		
		private bool _canRequest;
		
		private bool _canApprove;
		
		private bool _canViewReports;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OncanRequestChanging(bool value);
    partial void OncanRequestChanged();
    partial void OncanApproveChanging(bool value);
    partial void OncanApproveChanged();
    partial void OncanViewReportsChanging(bool value);
    partial void OncanViewReportsChanged();
    #endregion
		
		public userAction()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canRequest", DbType="Bit NOT NULL")]
		public bool canRequest
		{
			get
			{
				return this._canRequest;
			}
			set
			{
				if ((this._canRequest != value))
				{
					this.OncanRequestChanging(value);
					this.SendPropertyChanging();
					this._canRequest = value;
					this.SendPropertyChanged("canRequest");
					this.OncanRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canApprove", DbType="Bit NOT NULL")]
		public bool canApprove
		{
			get
			{
				return this._canApprove;
			}
			set
			{
				if ((this._canApprove != value))
				{
					this.OncanApproveChanging(value);
					this.SendPropertyChanging();
					this._canApprove = value;
					this.SendPropertyChanged("canApprove");
					this.OncanApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canViewReports", DbType="Bit NOT NULL")]
		public bool canViewReports
		{
			get
			{
				return this._canViewReports;
			}
			set
			{
				if ((this._canViewReports != value))
				{
					this.OncanViewReportsChanging(value);
					this.SendPropertyChanging();
					this._canViewReports = value;
					this.SendPropertyChanged("canViewReports");
					this.OncanViewReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userAction", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.userActions.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.userActions.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userDefaultLocations")]
	public partial class userDefaultLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _userId;
		
		private int _organizationId;
		
		private System.Nullable<int> _schoolId;
		
		private EntityRef<organization> _organization;
		
		private EntityRef<school> _school;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnorganizationIdChanging(int value);
    partial void OnorganizationIdChanged();
    partial void OnschoolIdChanging(System.Nullable<int> value);
    partial void OnschoolIdChanged();
    #endregion
		
		public userDefaultLocation()
		{
			this._organization = default(EntityRef<organization>);
			this._school = default(EntityRef<school>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organizationId", DbType="Int NOT NULL")]
		public int organizationId
		{
			get
			{
				return this._organizationId;
			}
			set
			{
				if ((this._organizationId != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorganizationIdChanging(value);
					this.SendPropertyChanging();
					this._organizationId = value;
					this.SendPropertyChanged("organizationId");
					this.OnorganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolId", DbType="Int")]
		public System.Nullable<int> schoolId
		{
			get
			{
				return this._schoolId;
			}
			set
			{
				if ((this._schoolId != value))
				{
					if (this._school.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolIdChanging(value);
					this.SendPropertyChanging();
					this._schoolId = value;
					this.SendPropertyChanged("schoolId");
					this.OnschoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_userDefaultLocation", Storage="_organization", ThisKey="organizationId", OtherKey="id", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.userDefaultLocations.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.userDefaultLocations.Add(this);
						this._organizationId = value.id;
					}
					else
					{
						this._organizationId = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_userDefaultLocation", Storage="_school", ThisKey="schoolId", OtherKey="id", IsForeignKey=true)]
		public school school
		{
			get
			{
				return this._school.Entity;
			}
			set
			{
				school previousValue = this._school.Entity;
				if (((previousValue != value) 
							|| (this._school.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._school.Entity = null;
						previousValue.userDefaultLocations.Remove(this);
					}
					this._school.Entity = value;
					if ((value != null))
					{
						value.userDefaultLocations.Add(this);
						this._schoolId = value.id;
					}
					else
					{
						this._schoolId = default(Nullable<int>);
					}
					this.SendPropertyChanged("school");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userDefaultLocation", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.userDefaultLocations.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.userDefaultLocations.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userFteValues")]
	public partial class userFteValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _userId;
		
		private double _fteValue;
		
		private System.Nullable<System.DateTime> _fteFrom;
		
		private System.Nullable<System.DateTime> _fteTo;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnfteValueChanging(double value);
    partial void OnfteValueChanged();
    partial void OnfteFromChanging(System.Nullable<System.DateTime> value);
    partial void OnfteFromChanged();
    partial void OnfteToChanging(System.Nullable<System.DateTime> value);
    partial void OnfteToChanged();
    #endregion
		
		public userFteValue()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fteValue", DbType="Float NOT NULL")]
		public double fteValue
		{
			get
			{
				return this._fteValue;
			}
			set
			{
				if ((this._fteValue != value))
				{
					this.OnfteValueChanging(value);
					this.SendPropertyChanging();
					this._fteValue = value;
					this.SendPropertyChanged("fteValue");
					this.OnfteValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fteFrom", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> fteFrom
		{
			get
			{
				return this._fteFrom;
			}
			set
			{
				if ((this._fteFrom != value))
				{
					this.OnfteFromChanging(value);
					this.SendPropertyChanging();
					this._fteFrom = value;
					this.SendPropertyChanged("fteFrom");
					this.OnfteFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fteTo", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> fteTo
		{
			get
			{
				return this._fteTo;
			}
			set
			{
				if ((this._fteTo != value))
				{
					this.OnfteToChanging(value);
					this.SendPropertyChanging();
					this._fteTo = value;
					this.SendPropertyChanged("fteTo");
					this.OnfteToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userFteValue", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.userFteValues.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.userFteValues.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userOrganization")]
	public partial class userOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userId;
		
		private int _organizationId;
		
		private System.Nullable<int> _schoolId;
		
		private EntityRef<school> _school;
		
		private EntityRef<organization> _organization;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnorganizationIdChanging(int value);
    partial void OnorganizationIdChanged();
    partial void OnschoolIdChanging(System.Nullable<int> value);
    partial void OnschoolIdChanged();
    #endregion
		
		public userOrganization()
		{
			this._school = default(EntityRef<school>);
			this._organization = default(EntityRef<organization>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organizationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int organizationId
		{
			get
			{
				return this._organizationId;
			}
			set
			{
				if ((this._organizationId != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorganizationIdChanging(value);
					this.SendPropertyChanging();
					this._organizationId = value;
					this.SendPropertyChanged("organizationId");
					this.OnorganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolId", DbType="Int")]
		public System.Nullable<int> schoolId
		{
			get
			{
				return this._schoolId;
			}
			set
			{
				if ((this._schoolId != value))
				{
					if (this._school.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnschoolIdChanging(value);
					this.SendPropertyChanging();
					this._schoolId = value;
					this.SendPropertyChanged("schoolId");
					this.OnschoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_userOrganization", Storage="_school", ThisKey="schoolId", OtherKey="id", IsForeignKey=true)]
		public school school
		{
			get
			{
				return this._school.Entity;
			}
			set
			{
				school previousValue = this._school.Entity;
				if (((previousValue != value) 
							|| (this._school.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._school.Entity = null;
						previousValue.userOrganizations.Remove(this);
					}
					this._school.Entity = value;
					if ((value != null))
					{
						value.userOrganizations.Add(this);
						this._schoolId = value.id;
					}
					else
					{
						this._schoolId = default(Nullable<int>);
					}
					this.SendPropertyChanged("school");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_userOrganization", Storage="_organization", ThisKey="organizationId", OtherKey="id", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.userOrganizations.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.userOrganizations.Add(this);
						this._organizationId = value.id;
					}
					else
					{
						this._organizationId = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userOrganization", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.userOrganizations.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.userOrganizations.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userRole")]
	public partial class userRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userId;
		
		private int _roleId;
		
		private EntityRef<role> _role;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnroleIdChanging(int value);
    partial void OnroleIdChanged();
    #endregion
		
		public userRole()
		{
			this._role = default(EntityRef<role>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_userRole", Storage="_role", ThisKey="roleId", OtherKey="id", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.userRoles.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.userRoles.Add(this);
						this._roleId = value.id;
					}
					else
					{
						this._roleId = default(int);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userRole", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.userRoles.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.userRoles.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _middleName;
		
		private string _userName;
		
		private string _salutation;
		
		private string _pwd;
		
		private System.DateTime _pwdChangedDate;
		
		private System.Nullable<int> _pwdChangedBy;
		
		private bool _active;
		
		private System.Nullable<System.DateTime> _applyDate;
		
		private string _userImageFile;
		
		private System.Nullable<char> _usertype;
		
		private System.Nullable<int> _ps_user_id;
		
		private string _phone;
		
		private string _cell;
		
		private EntitySet<userTimeRecord> _userTimeRecords;
		
		private EntitySet<studentSupportReport> _studentSupportReports;
		
		private EntitySet<studentSupportRequestAssignment> _studentSupportRequestAssignments;
		
		private EntitySet<studentSupportRequestNotification> _studentSupportRequestNotifications;
		
		private EntitySet<studentSupportRequest> _studentSupportRequests;
		
		private EntitySet<studentSupportRequest> _studentSupportRequests1;
		
		private EntitySet<studentTeamConsultationMembership> _studentTeamConsultationMemberships;
		
		private EntitySet<userAction> _userActions;
		
		private EntitySet<userDefaultLocation> _userDefaultLocations;
		
		private EntitySet<userFteValue> _userFteValues;
		
		private EntitySet<userOrganization> _userOrganizations;
		
		private EntitySet<userRole> _userRoles;
		
		private EntitySet<userSupportType> _userSupportTypes;
		
		private EntitySet<studentSupportReportFile> _studentSupportReportFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnmiddleNameChanging(string value);
    partial void OnmiddleNameChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnsalutationChanging(string value);
    partial void OnsalutationChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    partial void OnpwdChangedDateChanging(System.DateTime value);
    partial void OnpwdChangedDateChanged();
    partial void OnpwdChangedByChanging(System.Nullable<int> value);
    partial void OnpwdChangedByChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnapplyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnapplyDateChanged();
    partial void OnuserImageFileChanging(string value);
    partial void OnuserImageFileChanged();
    partial void OnusertypeChanging(System.Nullable<char> value);
    partial void OnusertypeChanged();
    partial void Onps_user_idChanging(System.Nullable<int> value);
    partial void Onps_user_idChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OncellChanging(string value);
    partial void OncellChanged();
    #endregion
		
		public user()
		{
			this._userTimeRecords = new EntitySet<userTimeRecord>(new Action<userTimeRecord>(this.attach_userTimeRecords), new Action<userTimeRecord>(this.detach_userTimeRecords));
			this._studentSupportReports = new EntitySet<studentSupportReport>(new Action<studentSupportReport>(this.attach_studentSupportReports), new Action<studentSupportReport>(this.detach_studentSupportReports));
			this._studentSupportRequestAssignments = new EntitySet<studentSupportRequestAssignment>(new Action<studentSupportRequestAssignment>(this.attach_studentSupportRequestAssignments), new Action<studentSupportRequestAssignment>(this.detach_studentSupportRequestAssignments));
			this._studentSupportRequestNotifications = new EntitySet<studentSupportRequestNotification>(new Action<studentSupportRequestNotification>(this.attach_studentSupportRequestNotifications), new Action<studentSupportRequestNotification>(this.detach_studentSupportRequestNotifications));
			this._studentSupportRequests = new EntitySet<studentSupportRequest>(new Action<studentSupportRequest>(this.attach_studentSupportRequests), new Action<studentSupportRequest>(this.detach_studentSupportRequests));
			this._studentSupportRequests1 = new EntitySet<studentSupportRequest>(new Action<studentSupportRequest>(this.attach_studentSupportRequests1), new Action<studentSupportRequest>(this.detach_studentSupportRequests1));
			this._studentTeamConsultationMemberships = new EntitySet<studentTeamConsultationMembership>(new Action<studentTeamConsultationMembership>(this.attach_studentTeamConsultationMemberships), new Action<studentTeamConsultationMembership>(this.detach_studentTeamConsultationMemberships));
			this._userActions = new EntitySet<userAction>(new Action<userAction>(this.attach_userActions), new Action<userAction>(this.detach_userActions));
			this._userDefaultLocations = new EntitySet<userDefaultLocation>(new Action<userDefaultLocation>(this.attach_userDefaultLocations), new Action<userDefaultLocation>(this.detach_userDefaultLocations));
			this._userFteValues = new EntitySet<userFteValue>(new Action<userFteValue>(this.attach_userFteValues), new Action<userFteValue>(this.detach_userFteValues));
			this._userOrganizations = new EntitySet<userOrganization>(new Action<userOrganization>(this.attach_userOrganizations), new Action<userOrganization>(this.detach_userOrganizations));
			this._userRoles = new EntitySet<userRole>(new Action<userRole>(this.attach_userRoles), new Action<userRole>(this.detach_userRoles));
			this._userSupportTypes = new EntitySet<userSupportType>(new Action<userSupportType>(this.attach_userSupportTypes), new Action<userSupportType>(this.detach_userSupportTypes));
			this._studentSupportReportFiles = new EntitySet<studentSupportReportFile>(new Action<studentSupportReportFile>(this.attach_studentSupportReportFiles), new Action<studentSupportReportFile>(this.detach_studentSupportReportFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middleName", DbType="VarChar(40)")]
		public string middleName
		{
			get
			{
				return this._middleName;
			}
			set
			{
				if ((this._middleName != value))
				{
					this.OnmiddleNameChanging(value);
					this.SendPropertyChanging();
					this._middleName = value;
					this.SendPropertyChanged("middleName");
					this.OnmiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salutation", DbType="VarChar(10)")]
		public string salutation
		{
			get
			{
				return this._salutation;
			}
			set
			{
				if ((this._salutation != value))
				{
					this.OnsalutationChanging(value);
					this.SendPropertyChanging();
					this._salutation = value;
					this.SendPropertyChanged("salutation");
					this.OnsalutationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwdChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime pwdChangedDate
		{
			get
			{
				return this._pwdChangedDate;
			}
			set
			{
				if ((this._pwdChangedDate != value))
				{
					this.OnpwdChangedDateChanging(value);
					this.SendPropertyChanging();
					this._pwdChangedDate = value;
					this.SendPropertyChanged("pwdChangedDate");
					this.OnpwdChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwdChangedBy", DbType="Int")]
		public System.Nullable<int> pwdChangedBy
		{
			get
			{
				return this._pwdChangedBy;
			}
			set
			{
				if ((this._pwdChangedBy != value))
				{
					this.OnpwdChangedByChanging(value);
					this.SendPropertyChanging();
					this._pwdChangedBy = value;
					this.SendPropertyChanged("pwdChangedBy");
					this.OnpwdChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> applyDate
		{
			get
			{
				return this._applyDate;
			}
			set
			{
				if ((this._applyDate != value))
				{
					this.OnapplyDateChanging(value);
					this.SendPropertyChanging();
					this._applyDate = value;
					this.SendPropertyChanged("applyDate");
					this.OnapplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userImageFile", DbType="VarChar(40)")]
		public string userImageFile
		{
			get
			{
				return this._userImageFile;
			}
			set
			{
				if ((this._userImageFile != value))
				{
					this.OnuserImageFileChanging(value);
					this.SendPropertyChanging();
					this._userImageFile = value;
					this.SendPropertyChanged("userImageFile");
					this.OnuserImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="Char(1)")]
		public System.Nullable<char> usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this.OnusertypeChanging(value);
					this.SendPropertyChanging();
					this._usertype = value;
					this.SendPropertyChanged("usertype");
					this.OnusertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ps_user_id", DbType="Int")]
		public System.Nullable<int> ps_user_id
		{
			get
			{
				return this._ps_user_id;
			}
			set
			{
				if ((this._ps_user_id != value))
				{
					this.Onps_user_idChanging(value);
					this.SendPropertyChanging();
					this._ps_user_id = value;
					this.SendPropertyChanged("ps_user_id");
					this.Onps_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cell", DbType="VarChar(50)")]
		public string cell
		{
			get
			{
				return this._cell;
			}
			set
			{
				if ((this._cell != value))
				{
					this.OncellChanging(value);
					this.SendPropertyChanging();
					this._cell = value;
					this.SendPropertyChanged("cell");
					this.OncellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userTimeRecord", Storage="_userTimeRecords", ThisKey="id", OtherKey="userId")]
		public EntitySet<userTimeRecord> userTimeRecords
		{
			get
			{
				return this._userTimeRecords;
			}
			set
			{
				this._userTimeRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportReport", Storage="_studentSupportReports", ThisKey="id", OtherKey="specialistId")]
		public EntitySet<studentSupportReport> studentSupportReports
		{
			get
			{
				return this._studentSupportReports;
			}
			set
			{
				this._studentSupportReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportRequestAssignment", Storage="_studentSupportRequestAssignments", ThisKey="id", OtherKey="specialistId")]
		public EntitySet<studentSupportRequestAssignment> studentSupportRequestAssignments
		{
			get
			{
				return this._studentSupportRequestAssignments;
			}
			set
			{
				this._studentSupportRequestAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportRequestNotification", Storage="_studentSupportRequestNotifications", ThisKey="id", OtherKey="userId")]
		public EntitySet<studentSupportRequestNotification> studentSupportRequestNotifications
		{
			get
			{
				return this._studentSupportRequestNotifications;
			}
			set
			{
				this._studentSupportRequestNotifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportRequest", Storage="_studentSupportRequests", ThisKey="id", OtherKey="requestedBy")]
		public EntitySet<studentSupportRequest> studentSupportRequests
		{
			get
			{
				return this._studentSupportRequests;
			}
			set
			{
				this._studentSupportRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportRequest1", Storage="_studentSupportRequests1", ThisKey="id", OtherKey="whoApproved")]
		public EntitySet<studentSupportRequest> studentSupportRequests1
		{
			get
			{
				return this._studentSupportRequests1;
			}
			set
			{
				this._studentSupportRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentTeamConsultationMembership", Storage="_studentTeamConsultationMemberships", ThisKey="id", OtherKey="userId")]
		public EntitySet<studentTeamConsultationMembership> studentTeamConsultationMemberships
		{
			get
			{
				return this._studentTeamConsultationMemberships;
			}
			set
			{
				this._studentTeamConsultationMemberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userAction", Storage="_userActions", ThisKey="id", OtherKey="userId")]
		public EntitySet<userAction> userActions
		{
			get
			{
				return this._userActions;
			}
			set
			{
				this._userActions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userDefaultLocation", Storage="_userDefaultLocations", ThisKey="id", OtherKey="userId")]
		public EntitySet<userDefaultLocation> userDefaultLocations
		{
			get
			{
				return this._userDefaultLocations;
			}
			set
			{
				this._userDefaultLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userFteValue", Storage="_userFteValues", ThisKey="id", OtherKey="userId")]
		public EntitySet<userFteValue> userFteValues
		{
			get
			{
				return this._userFteValues;
			}
			set
			{
				this._userFteValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userOrganization", Storage="_userOrganizations", ThisKey="id", OtherKey="userId")]
		public EntitySet<userOrganization> userOrganizations
		{
			get
			{
				return this._userOrganizations;
			}
			set
			{
				this._userOrganizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userRole", Storage="_userRoles", ThisKey="id", OtherKey="userId")]
		public EntitySet<userRole> userRoles
		{
			get
			{
				return this._userRoles;
			}
			set
			{
				this._userRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userSupportType", Storage="_userSupportTypes", ThisKey="id", OtherKey="userId")]
		public EntitySet<userSupportType> userSupportTypes
		{
			get
			{
				return this._userSupportTypes;
			}
			set
			{
				this._userSupportTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportReportFile", Storage="_studentSupportReportFiles", ThisKey="id", OtherKey="uploadedBy")]
		public EntitySet<studentSupportReportFile> studentSupportReportFiles
		{
			get
			{
				return this._studentSupportReportFiles;
			}
			set
			{
				this._studentSupportReportFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_userTimeRecords(userTimeRecord entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_userTimeRecords(userTimeRecord entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_studentSupportReports(studentSupportReport entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_studentSupportReports(studentSupportReport entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_studentSupportRequestAssignments(studentSupportRequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_studentSupportRequestAssignments(studentSupportRequestAssignment entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_studentSupportRequestNotifications(studentSupportRequestNotification entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_studentSupportRequestNotifications(studentSupportRequestNotification entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_studentSupportRequests(studentSupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_studentSupportRequests(studentSupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_studentSupportRequests1(studentSupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_studentSupportRequests1(studentSupportRequest entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
		
		private void attach_studentTeamConsultationMemberships(studentTeamConsultationMembership entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_studentTeamConsultationMemberships(studentTeamConsultationMembership entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_userActions(userAction entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_userActions(userAction entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_userDefaultLocations(userDefaultLocation entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_userDefaultLocations(userDefaultLocation entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_userFteValues(userFteValue entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_userFteValues(userFteValue entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_userOrganizations(userOrganization entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_userOrganizations(userOrganization entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_userRoles(userRole entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_userSupportTypes(userSupportType entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_userSupportTypes(userSupportType entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_studentSupportReportFiles(studentSupportReportFile entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_studentSupportReportFiles(studentSupportReportFile entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userSupportTypes")]
	public partial class userSupportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _userId;
		
		private int _supportRequestTypeId;
		
		private EntityRef<supportRequestType> _supportRequestType;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnsupportRequestTypeIdChanging(int value);
    partial void OnsupportRequestTypeIdChanged();
    #endregion
		
		public userSupportType()
		{
			this._supportRequestType = default(EntityRef<supportRequestType>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supportRequestTypeId", DbType="Int NOT NULL")]
		public int supportRequestTypeId
		{
			get
			{
				return this._supportRequestTypeId;
			}
			set
			{
				if ((this._supportRequestTypeId != value))
				{
					if (this._supportRequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsupportRequestTypeIdChanging(value);
					this.SendPropertyChanging();
					this._supportRequestTypeId = value;
					this.SendPropertyChanged("supportRequestTypeId");
					this.OnsupportRequestTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supportRequestType_userSupportType", Storage="_supportRequestType", ThisKey="supportRequestTypeId", OtherKey="id", IsForeignKey=true)]
		public supportRequestType supportRequestType
		{
			get
			{
				return this._supportRequestType.Entity;
			}
			set
			{
				supportRequestType previousValue = this._supportRequestType.Entity;
				if (((previousValue != value) 
							|| (this._supportRequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supportRequestType.Entity = null;
						previousValue.userSupportTypes.Remove(this);
					}
					this._supportRequestType.Entity = value;
					if ((value != null))
					{
						value.userSupportTypes.Add(this);
						this._supportRequestTypeId = value.id;
					}
					else
					{
						this._supportRequestTypeId = default(int);
					}
					this.SendPropertyChanged("supportRequestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_userSupportType", Storage="_user", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.userSupportTypes.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.userSupportTypes.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.studentSupportReportFiles")]
	public partial class studentSupportReportFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _studentSupportReportId;
		
		private string _fileName;
		
		private System.Data.Linq.Binary _fileContent;
		
		private System.DateTime _dateUploaded;
		
		private int _uploadedBy;
		
		private string _description;
		
		private EntityRef<studentSupportReport> _studentSupportReport;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentSupportReportIdChanging(int value);
    partial void OnstudentSupportReportIdChanged();
    partial void OnfileNameChanging(string value);
    partial void OnfileNameChanged();
    partial void OnfileContentChanging(System.Data.Linq.Binary value);
    partial void OnfileContentChanged();
    partial void OndateUploadedChanging(System.DateTime value);
    partial void OndateUploadedChanged();
    partial void OnuploadedByChanging(int value);
    partial void OnuploadedByChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public studentSupportReportFile()
		{
			this._studentSupportReport = default(EntityRef<studentSupportReport>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentSupportReportId", DbType="Int NOT NULL")]
		public int studentSupportReportId
		{
			get
			{
				return this._studentSupportReportId;
			}
			set
			{
				if ((this._studentSupportReportId != value))
				{
					if (this._studentSupportReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentSupportReportIdChanging(value);
					this.SendPropertyChanging();
					this._studentSupportReportId = value;
					this.SendPropertyChanged("studentSupportReportId");
					this.OnstudentSupportReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string fileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnfileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("fileName");
					this.OnfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileContent", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary fileContent
		{
			get
			{
				return this._fileContent;
			}
			set
			{
				if ((this._fileContent != value))
				{
					this.OnfileContentChanging(value);
					this.SendPropertyChanging();
					this._fileContent = value;
					this.SendPropertyChanged("fileContent");
					this.OnfileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateUploaded", DbType="SmallDateTime NOT NULL")]
		public System.DateTime dateUploaded
		{
			get
			{
				return this._dateUploaded;
			}
			set
			{
				if ((this._dateUploaded != value))
				{
					this.OndateUploadedChanging(value);
					this.SendPropertyChanging();
					this._dateUploaded = value;
					this.SendPropertyChanged("dateUploaded");
					this.OndateUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploadedBy", DbType="Int NOT NULL")]
		public int uploadedBy
		{
			get
			{
				return this._uploadedBy;
			}
			set
			{
				if ((this._uploadedBy != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuploadedByChanging(value);
					this.SendPropertyChanging();
					this._uploadedBy = value;
					this.SendPropertyChanged("uploadedBy");
					this.OnuploadedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="studentSupportReport_studentSupportReportFile", Storage="_studentSupportReport", ThisKey="studentSupportReportId", OtherKey="id", IsForeignKey=true)]
		public studentSupportReport studentSupportReport
		{
			get
			{
				return this._studentSupportReport.Entity;
			}
			set
			{
				studentSupportReport previousValue = this._studentSupportReport.Entity;
				if (((previousValue != value) 
							|| (this._studentSupportReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._studentSupportReport.Entity = null;
						previousValue.studentSupportReportFiles.Remove(this);
					}
					this._studentSupportReport.Entity = value;
					if ((value != null))
					{
						value.studentSupportReportFiles.Add(this);
						this._studentSupportReportId = value.id;
					}
					else
					{
						this._studentSupportReportId = default(int);
					}
					this.SendPropertyChanged("studentSupportReport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_studentSupportReportFile", Storage="_user", ThisKey="uploadedBy", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.studentSupportReportFiles.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.studentSupportReportFiles.Add(this);
						this._uploadedBy = value.id;
					}
					else
					{
						this._uploadedBy = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class serviceValidateUserResult
	{
		
		private int _result;
		
		public serviceValidateUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="Int NOT NULL")]
		public int result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this._result = value;
				}
			}
		}
	}
	
	public partial class serviceCheckSessionResult
	{
		
		private int _Column1;
		
		public serviceCheckSessionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class serviceLoginResult
	{
		
		private System.Nullable<long> _Column1;
		
		public serviceLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="BigInt")]
		public System.Nullable<long> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
