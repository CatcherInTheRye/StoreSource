@using DataRepository.DataContracts
@model UserForm
@{
    ViewBag.Title = "User Update";
    Layout = "~/Views/Shared/_PCSManagerLayout.cshtml";
    List<OrganizationForm> organizations = ViewBag.Organizations as List<OrganizationForm> ?? new List<OrganizationForm>();
    List<SchoolFormShort> schools = ViewBag.Schools as List<SchoolFormShort> ?? new List<SchoolFormShort>();
    List<IdTitleDescription> supportRequestTypes = ViewBag.SupportRequestTypes as List<IdTitleDescription> ?? new List<IdTitleDescription>();
    bool newObj = Model.Id == -1;
}
<div class="wrapper-content">
    <div id="column-right">
        <div data-role="content">
            <div class="intelli-content intelli-tabs">
                <ul class="intelli-tabs-panel" style="background: transparent;">
                    <li><a href="#intelli-tab-1">Info</a></li>
                    <li class="@(newObj ? "hidden" : string.Empty)"><a href="#intelli-tab-2">FTE</a></li>
                </ul>
                <div class="intelli-main-content-header ui-bar ui-bar-a">
                    <a href="javascript:;" class="icoMenu" id="togglepanel"><span>Menu</span></a>
                    <!--a class="ui-btn ui-nodisc-icon ui-btn-inline ui-btn-icon-left ui-btn-b ui-icon-bars ui-btn-icon-notext" href="javascript:;" id="togglepanel">Panel</a-->
                    <h3>
                        Manage</h3>
                </div>
                <div class="intelli-main-content ui-body ui-body-a">
                    <div id="intelli-tab-1">
                        <p>
                            <a target="_self" rel="external" href="@(Url.Action("PCSManagerSpecialists"))" class="intelli-btn-white ui-link">
                                &lt; Back To Search</a>
                        </p>
                        <p>
                            @using (Html.BeginForm("UserUpdate"))
                            {
                                @Html.ValidationSummary(true)
                                @Html.HiddenFor(m => m.Id)
                                <ul class="intelli-simple-list">
                                    <li>
                                        <label>
                                            Last Name:</label>
                                        @Html.TextBoxFor(m => m.LastName, new { @class = "intelli-textfield" })
                                        @Html.ValidationMessageFor(m => m.LastName)
                                    </li>
                                    <li>
                                        <label>
                                            First Name:</label>
                                        @Html.TextBoxFor(m => m.FirstName, new { @class = "intelli-textfield" })
                                        @Html.ValidationMessageFor(m => m.FirstName)
                                    </li>
                                    <li>
                                        <label>
                                            Middle Name:</label>
                                        @Html.TextBoxFor(m => m.MiddleName, new { @class = "intelli-textfield" })
                                    </li>
                                    <li>
                                        <label>
                                            Title:</label>
                                        @Html.TextBoxFor(m => m.Salutation, new { @class = "intelli-textfield" })
                                    </li>
                                    <li>
                                        <label>
                                            Phone:</label>
                                        @Html.TextBoxFor(m => m.Phone, new { @class = "intelli-textfield" })
                                    </li>
                                    <li>
                                        <label>
                                            Cell:</label>
                                        @Html.TextBoxFor(m => m.Cell, new { @class = "intelli-textfield" })
                                    </li>
                                    <li>
                                        <label>
                                            Email:</label>
                                        @Html.TextBoxFor(m => m.Email, new { @class = "intelli-textfield" })
                                        @Html.ValidationMessageFor(m => m.Email)
                                    </li>
                                    <li>
                                        <label>
                                            Login:</label>
                                        @Html.TextBoxFor(m => m.UserName, new { @class = "intelli-textfield" })
                                        @Html.ValidationMessageFor(m => m.UserName)
                                    </li>
                                    <li>
                                        <button id="changePassword">
                                            Change Password</button>
                                    </li>
                                    <li class="changePasswordContainer hidden">
                                        <label>
                                            Password:</label>
                                        @Html.TextBoxFor(m => m.Pwd, new { @class = "intelli-textfield" })
                                        @*@Html.PasswordFor(m => m.Pwd, new { @class = "intelli-textfield" })*@
                                        @Html.ValidationMessageFor(m => m.Pwd)
                                    </li>
                                    <li class="changePasswordContainer hidden">
                                        <label>
                                            Confirm Password:</label>
                                        @Html.PasswordFor(m => m.ConfirmPwd, new { @class = "intelli-textfield" })
                                        @Html.ValidationMessageFor(m => m.ConfirmPwd)
                                    </li>
                                    <li>
                                        @Html.HiddenFor(m => m.UserSupportRequests)
                                        <label>
                                            Specilist:</label>
                                        <select id="specialist" class="intelli-textfield" style="width: 100%;" data-role="none">
                                            <option value=""></option>
                                            @foreach (IdTitleDescription item in supportRequestTypes)
                                            {
                                                <option value="@(item.Id)">@(item.Title)</option>
                                            }
                                        </select>
                                    </li>
                                    <li>
                                        @Html.HiddenFor(m => m.Districts)
                                        <label>
                                            Primary Location:</label>
                                        <select id="organizations" multiple="multiple" class="intelli-textfield" style="width: 100%;"
                                            data-role="none">
                                            @foreach (OrganizationForm item in organizations)
                                            {
                                                <option value="@(item.Id)">@(item.Title)</option>
                                            }
                                        </select>
                                        @Html.HiddenFor(m => m.Schools)
                                        <select id="schoolsSelect" multiple="multiple" class="intelli-textfield" style="width: 100%;"
                                            data-role="none">
                                            @foreach (SchoolFormShort item in schools)
                                            {
                                                <option data-orgid="@(item.OrganizationId)" value="@(item.Id)">@(item.Title)</option>
                                            }
                                        </select>
                                        <button id="userSubmit" type="submit" class="hidden">
                                        </button>
                                    </li>
                                </ul>
                            }
                            <a href="javascript:;" id="userSabeButton" class="intelli-btn-save"
                                style="margin-top: 10px;">Save</a>
                        </p>
                    </div>
                    <div id="intelli-tab-2" class="@(newObj ? "hidden" : string.Empty)">
                        <p>
                            <a target="_self" rel="external" href="@(Url.Action("PCSManagerSpecialists"))" class="intelli-btn-white ui-link">
                                &lt; Back To Search</a>
                        </p>
                        <p>
                            <div id="fteGrid">
                            </div>
                        </p>
                        <p>
                            <a href="#" id="addNewFte" class="intelli-btn-white editPopup ui-link">Add</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <!-- /content -->
    </div>
    <div class="clear">
    </div>
</div>
<div id="editPopupWindow" class="intelli-popup-window intelli-window-poup-width"
    style="display: none;">
    <span class="title">FTE</span> <a href="#" class="btclose"><span>Close Window</span></a>
    <div class="wrap">
        <input type="hidden" id="fteId"/>
        <ul class="intelli-simple-list">
            <li>
                <label>FTE:</label>
                <input id="fteValue" class="intelli-textfield" type="text" value="" /></li>
            <li>
                <label>From:</label>
                <input id="fteFrom" class="intelli-textfield" type="text" value="" /></li>
            <li>
                <label>
                    To:</label><input id="fteTo" class="intelli-textfield" type="text" value="" /></li>
            
        </ul>
        <a id="fteSave" class="intelli-btn-save intelli-btn-popupsave" style="margin-top: 10px;">
            Save</a> <a href="javascript:;" class="intelli-btn-cancel intelli-btn-popupsave"
                        style="margin-top: 10px;">Cancel</a>
    </div>
</div>

<div class="wrap">
</div>
@section pageJS{
    <script type="text/javascript">
        $(document).ready(function () {
            //hide FTE tab for new user
            if ($("#Id").val() == "-1") {
                $(".hidden").hide();
            }

            //masked text boxes (phone numbers)
            $("#Phone").kendoMaskedTextBox({
                mask: "(999) 000-0000"
            });

            $("#Cell").kendoMaskedTextBox({
                mask: "(999) 000-0000"
            });

            //schools and district
            $("#organizations").select2({
                placeholder: "District..."
            });

            $("#schoolsSelect").select2({
                placeholder: "Schools..."
            });

            $("#organizations").change(function () {
                fileSchoolsOptions();
            });

            var allSchoolsOptions = [];
            $.each($("#schoolsSelect options"), function (i, item) {
                allSchoolsOptions.push({
                    value: $(item).attr("value"),
                    title: $(item).attr("value"),
                    orgId: $(item).attr("data-orgid")
                });
            });

            function fileSchoolsOptions() {
                $.get('@(Url.Action("SchoolsGet"))', { disctrictIds: $("#organizations").select2("val").join("_") }, function (result) {
                    if (result.Result.Type == 0) {
                        var schoolsVal = $("#schoolsSelect").select2("val");
                        $("#schoolsSelect").empty();
                        $.each(result.Data, function (i, item) {
                            $("#schoolsSelect").append("<option data-orgid='" + item.OrganizationId + "' value='" + item.Id + "'>" + item.Title + "</option>");
                        });
                        $("#schoolsSelect").select2("val", schoolsVal);
                    }
                }, 'json');
            }

            //Init selects on load
            $("#specialist").val($("#UserSupportRequests").val());
            $("#organizations").select2("val", $("#Districts").val().split("_"));
            $("#schoolsSelect").select2("val", $("#Schools").val().split("_"));
            $("#organizations").change();

            $("#changePassword").click(function () {
                changePasswordClick();
            });

            function changePasswordClick() {
                $("#changePassword").parents("li:first").hide();
                $("#Pwd").attr("type", "password");
                $(".changePasswordContainer").show();
            }
            
            if (@(Model.Id) < 0) {
                changePasswordClick();
            }

            //Submit
            $("#userSabeButton").click(function () {
                $("#UserSupportRequests").val($("#specialist").val());
                $("#Districts").val($("#organizations").select2("val").join("_"));
                $("#Schools").val($("#schoolsSelect").select2("val").join("_"));
                $("#userSubmit").click();
            });

            //FTE
            if ($("#Id").val() != "-1") {
                createFTEGrid();
            }

            fteValueKendo = $("#fteValue").kendoNumericTextBox({
                format: "#.#",
                min: 0,
                max: 1.0,
                step: 0.1
            });
            fteValueKendo = $("#fteValue").data("kendoNumericTextBox");
            
            //date pickers
            function startChange() {
                startDate = fteFromKendo.value(),
                endDate = fteToKendo.value();

                if (startDate) {
                    startDate = new Date(startDate);
                    startDate.setDate(startDate.getDate());
                    fteToKendo.min(startDate);
                } else if (endDate) {
                    start.max(new Date(endDate));
                } else {
                    endDate = new Date();
                    fteFromKendo.max(endDate);
                    fteToKendo.min(endDate);
                }
            }

            function endChange() {
                endDate = fteToKendo.value(),
                startDate = fteFromKendo.value();

                if (endDate) {
                    endDate = new Date(endDate);
                    endDate.setDate(endDate.getDate());
                    fteFromKendo.max(endDate);
                } else if (startDate) {
                    fteToKendo.min(new Date(startDate));
                } else {
                    endDate = new Date();
                    fteFromKendo.max(endDate);
                    fteToKendo.min(endDate);
                }
            }

            fteFromKendo = $("#fteFrom").kendoDatePicker({
                format: "yyyy.MM.dd",
                change: startChange
            }).data("kendoDatePicker");

            fteToKendo = $("#fteTo").kendoDatePicker({
                format: "yyyy.MM.dd",
                change: endChange
            }).data("kendoDatePicker");

            fteFromKendo.max(fteToKendo.value());
            fteToKendo.min(fteFromKendo.value());

            $("#addNewFte").click(function () {
                openFteWindow(-1);
            });

            $("#fteSave").click(function() {
                $.post("@(Url.Action("FteUpdate"))", getFTE(), function(data) {
                    if (data.Result.Type == 0) {
                        closeFteWindow();
                        createFTEGrid();
                    }
                }, 'json');
            });

            $('.btclose').click(function() {
                closeFteWindow();
            });

            function closeFteWindow() {
                $(this).parent().css('display', 'none');
                $("div.lb_overlay").css('display', 'none');
            }

            $('.intelli-btn-popupsave').click(function() {
                $(this).parent().parent().css('display', 'none');
                $("div.lb_overlay").css('display', 'none');
                return false;
            });

            function getFTE() {
                return {
                    Id: $("#fteId").val(),
                    UserId: $("#Id").val(),
                    Value: fteValueKendo.value(),
                    From: kendo.toString(fteFromKendo.value(), "yyyy.MM.dd"),
                    To: kendo.toString(fteToKendo.value(), "yyyy.MM.dd")
                };
            }

        });    //document ready

        var startDate;
        var endDate;

        function openFteWindow(id) {
            if (id < 0) {
                clearWindow();
            } else { //init data in popup window
                initWindow(kendoDataSource.get(id));
            }
            $("#editPopupWindow").lightbox_me({
                centered: true,
                onLoad: function () {
                    fteValueKendo.focus();
                }
            });
        }

        var fteValueKendo;
        var fteFromKendo;
        var fteToKendo;

        function clearWindow() {
            $("#fteId").val(-1);
            $("#editPopupWindow input[type='text']").val("");
            fteValueKendo.value(0);
            fteFromKendo.value("");
            fteToKendo.value("");
            fteFromKendo.max(new Date(2100,0,1));
            fteToKendo.min(new Date(1900,0,1));
        }

        function initWindow(data) {
            if (data != null) {
                $("#fteId").val(data.Id);
                fteValueKendo.value(data.Value);
                fteFromKendo.value(data.From);
                $("#fteFrom").val(data.From);
                fteToKendo.value(data.To);
                $("#fteTo").val(data.To);
                fteFromKendo.max(data.To);
                fteToKendo.min(data.From);
            }
        }

        function createFTEGrid() {
            $.get('@(Url.Action("FteValuesGet"))', { userId: $("#Id").val() }, function (result) {
                if (result.Result.Type == 0) {
                    createKendoGrid(result.Data);
                }
            }, 'json');
        }

        var kendoDataSource;
        function createKendoGrid(results) {
            kendoDataSource = new kendo.data.DataSource({
                data: results,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "number" },
                            UserId: { type: "number" },
                            Value: { type: "string" },
                            From: { type: "string" },
                            To: { type: "string" }
                        }
                    }
                },
                pageSize: 20
                //                    serverPaging: true,
                //                    serverFiltering: true,
                //                    serverSorting: true
            });

            $("#fteGrid").kendoGrid({
                dataSource: kendoDataSource,
                sortable: {
                    mode: "multiple",
                    allowUnsort: true
                },
                pageable: true,
                scrollable: false,
                columns: [
                    {
                        hidden: true,
                        field: "Id"
                    },
                    {
                        hidden: true,
                        field: "UserId"
                    },
                    {
                        title: "FTE",
                        field: "Value",
                        sortable: true,
                        width: "40%",
                        //filterable: false,
                        template: "<a style='cursor: pointer' onclick='openFteWindow(${Id})' title='Edit'>#:Value#</a>"
                    },
                    {
                        title: "FROM",
                        field: "From",
                        //sortable: true
                        //format: "{0:yyyy.MM.dd}"
                    },
                    {
                        title: "TO",
                        field: "To",
                        //sortable: true
                        //format: "{0:yyyy.MM.dd}"
                    },
                    {
                        width: 20,
                        template: "<a onclick='recordRemove(${Id})' title='Delete' class='intelli-btn-delete'><span>Delete</span></a>"
                    }
                ]
            });
        } //createKendoGrid

        function recordRemove(id) {
            if (ConfirmBox("", "Remove FTE?")) {
                $.post("@(Url.Action("FteRemove"))", { id: id }, function(data) {
                    if (data.Result.Type == 0) {
                        createFTEGrid();
                    }
                });
            }
        }
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}